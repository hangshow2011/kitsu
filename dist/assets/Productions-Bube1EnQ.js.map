{"version":3,"file":"Productions-Bube1EnQ.js","sources":["../../src/components/lists/ProductionList.vue","../../src/components/widgets/ButtonLink.vue","../../src/components/pages/Productions.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\">\n      <table class=\"datatable multi-section\">\n        <thead class=\"datatable-head\">\n          <tr>\n            <th scope=\"col\" class=\"name datatable-row-header\">\n              {{ $t('productions.fields.name') }}\n            </th>\n            <th scope=\"col\" class=\"type\">\n              {{ $t('productions.fields.type') }}\n            </th>\n            <th scope=\"col\" class=\"style\">\n              {{ $t('productions.fields.style') }}\n            </th>\n            <th scope=\"col\" class=\"fps\">{{ $t('productions.fields.fps') }}</th>\n            <th scope=\"col\" class=\"ratio\">\n              {{ $t('productions.fields.ratio') }}\n            </th>\n            <th scope=\"col\" class=\"resolution\">\n              {{ $t('productions.fields.resolution') }}\n            </th>\n            <th scope=\"col\" class=\"actions\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\">\n          <tr class=\"datatable-type-header\">\n            <th scope=\"rowgroup\" colspan=\"6\">\n              <span class=\"datatable-row-header\">\n                {{ $t('productions.status.open') }}\n              </span>\n            </th>\n          </tr>\n          <tr\n            class=\"datatable-row\"\n            v-for=\"entry in openProductions\"\n            :key=\"entry.id\"\n          >\n            <th class=\"name datatable-row-header\" scope=\"row\">\n              <production-name-cell\n                :with-avatar=\"true\"\n                :entry=\"entry\"\n                :last-production-screen=\"lastProductionScreen\"\n              />\n            </th>\n            <td class=\"type\">\n              {{ $t(`productions.type.${entry.production_type || 'short'}`) }}\n            </td>\n            <td class=\"style\">\n              {{\n                $t(\n                  `productions.style.${\n                    getProductionStyleLabel(entry.production_style) || '2d3d'\n                  }`\n                )\n              }}\n            </td>\n            <td class=\"fps\">\n              {{ entry.fps }}\n            </td>\n            <td class=\"ratio\">\n              {{ entry.ratio }}\n            </td>\n            <td class=\"resolution\">\n              {{ entry.resolution }}\n            </td>\n            <row-actions-cell\n              :entry-id=\"entry.id\"\n              @edit-clicked=\"$emit('edit-clicked', entry)\"\n              :hide-delete=\"true\"\n            />\n          </tr>\n        </tbody>\n        <tbody v-if=\"closedProductions.length > 0\">\n          <tr class=\"datatable-type-header\">\n            <th scope=\"rowgroup\" colspan=\"6\">\n              <span class=\"datatable-row-header\">\n                {{ $t('productions.status.closed') }}\n              </span>\n            </th>\n          </tr>\n          <tr\n            class=\"datatable-row\"\n            v-for=\"entry in closedProductions\"\n            :key=\"entry.id\"\n          >\n            <th class=\"name datatable-row-header\" scope=\"row\">\n              <production-name-cell\n                :with-avatar=\"true\"\n                :entry=\"entry\"\n                :last-production-screen=\"lastProductionScreen\"\n                :is-link=\"false\"\n              />\n            </th>\n            <td class=\"type\">\n              {{ $t(`productions.type.${entry.production_type || 'short'}`) }}\n            </td>\n            <td class=\"style\">\n              {{\n                $t(\n                  `productions.style.${\n                    getProductionStyleLabel(entry.production_style) || '2d3d'\n                  }`\n                )\n              }}\n            </td>\n            <td class=\"fps\">\n              {{ entry.fps }}\n            </td>\n            <td class=\"ratio\">\n              {{ entry.ratio }}\n            </td>\n            <td class=\"resolution\">\n              {{ entry.resolution }}\n            </td>\n            <row-actions-cell\n              :entry-id=\"entry.id\"\n              @edit-clicked=\"$emit('edit-clicked', entry)\"\n              @delete-clicked=\"$emit('delete-clicked', entry)\"\n            />\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\"> </table-info>\n\n    <p class=\"has-text-centered nb-productions\">\n      {{ entries.length }} {{ $tc('productions.number', entries.length) }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport ProductionNameCell from '@/components/cells/ProductionNameCell'\nimport RowActionsCell from '@/components/cells/RowActionsCell'\nimport TableInfo from '@/components/widgets/TableInfo'\n\nimport { PRODUCTION_STYLE_OPTIONS } from '@/lib/productions'\n\nexport default {\n  name: 'production-list',\n\n  props: {\n    entries: {\n      type: Array,\n      default: () => []\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {}\n  },\n\n  components: {\n    ProductionNameCell,\n    RowActionsCell,\n    TableInfo\n  },\n\n  computed: {\n    ...mapGetters(['openProductions', 'lastProductionScreen']),\n\n    closedProductions() {\n      return this.entries.filter(p => p.project_status_name === 'Closed')\n    }\n  },\n\n  methods: {\n    ...mapActions([]),\n\n    // Convert a database status to a locale key.\n    getStatusLocale(originalStatus) {\n      const statusMap = {\n        Active: 'productions.status.open', // Shotgun compatibility\n        Open: 'productions.status.open',\n        Closed: 'productions.status.closed'\n      }\n      return statusMap[originalStatus]\n    },\n\n    getProductionStyleLabel(value) {\n      return PRODUCTION_STYLE_OPTIONS.find(style => style.value === value)\n        ?.label\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.name {\n  min-width: 250px;\n  width: 250px;\n}\n\n.type {\n  min-width: 120px;\n  width: 120px;\n}\n\n.style {\n  min-width: 150px;\n  width: 150px;\n}\n\n.status {\n  min-width: 100px;\n  width: 100px;\n}\n\n.actions {\n  min-width: 100px;\n}\n\n.fps,\n.ratio,\n.resolution {\n  width: 100px;\n  min-width: 100px;\n}\n\n.fps,\n.ratio {\n  text-align: right;\n}\n</style>\n","<template>\n  <router-link class=\"button\" :title=\"title\" :to=\"path\">\n    <span class=\"icon is-small\" v-if=\"icon.length > 0 && icon.startsWith('fa')\">\n      <i :class=\"'fa ' + icon\"></i>\n    </span>\n    <plus-icon\n      :class=\"{\n        icon: true,\n        'is-small': true,\n        'only-icon': !isText\n      }\"\n      v-if=\"icon === 'plus'\"\n    />\n    <download-icon\n      :class=\"{\n        icon: true,\n        'is-small': true,\n        'only-icon': !isText\n      }\"\n      v-if=\"icon === 'download'\"\n    />\n    <upload-icon\n      :class=\"{\n        icon: true,\n        'is-small': true,\n        'only-icon': !isText\n      }\"\n      v-if=\"icon === 'upload'\"\n    />\n    <edit-icon\n      :class=\"{\n        icon: true,\n        'is-small': true,\n        'only-icon': !isText\n      }\"\n      v-if=\"icon === 'edit'\"\n    />\n    <trash-icon\n      :class=\"{\n        icon: true,\n        'is-small': true,\n        'only-icon': !isText\n      }\"\n      v-if=\"icon === 'delete'\"\n    />\n    <rotate-ccw-icon\n      :class=\"{\n        icon: true,\n        'is-small': true,\n        'only-icon': !isText\n      }\"\n      v-if=\"icon === 'restore'\"\n    />\n\n    <span\n      :class=\"{\n        text: true,\n        'is-hidden-touch': isResponsive\n      }\"\n      v-if=\"isText\"\n    >\n      {{ text }}\n    </span>\n  </router-link>\n</template>\n\n<script>\nimport {\n  DownloadIcon,\n  EditIcon,\n  PlusIcon,\n  RotateCcwIcon,\n  TrashIcon,\n  UploadIcon\n} from 'vue-feather-icons'\n\nexport default {\n  name: 'button-link',\n  components: {\n    DownloadIcon,\n    EditIcon,\n    PlusIcon,\n    RotateCcwIcon,\n    TrashIcon,\n    UploadIcon\n  },\n  props: {\n    text: {\n      default: '',\n      type: String\n    },\n    title: {\n      default: '',\n      type: String\n    },\n    path: {\n      default: ''\n    },\n    icon: {\n      default: '',\n      type: String\n    },\n    isResponsive: {\n      default: false,\n      type: Boolean\n    }\n  },\n  computed: {\n    isText() {\n      return this.text && this.text.length > 0\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.button .icon.is-small.only-icon {\n  margin-right: 0;\n}\n</style>\n","<template>\n  <div class=\"productions page fixed-page\">\n    <div class=\"level page-header\">\n      <div class=\"level-left\">\n        <page-title :text=\"$t('productions.title')\" />\n      </div>\n      <div class=\"level-right\">\n        <div class=\"level-item\">\n          <button-link\n            class=\"level-item\"\n            :text=\"$t('productions.new_production')\"\n            icon=\"plus\"\n            :path=\"{ name: 'new-production' }\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <production-list\n      :entries=\"productions\"\n      :is-loading=\"isProductionsLoading\"\n      :is-error=\"isProductionsLoadingError\"\n      @delete-clicked=\"onDeleteClicked\"\n      @edit-clicked=\"onEditClicked\"\n    />\n\n    <edit-production-modal\n      :active=\"modals.isNewDisplayed\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :production-to-edit=\"productionToEdit\"\n      @cancel=\"modals.isNewDisplayed = false\"\n      @fileselected=\"onProductionPictureSelected\"\n      @confirm=\"confirmEditProduction\"\n    />\n\n    <hard-delete-modal\n      :active=\"modals.isDeleteDisplayed\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText()\"\n      :error-text=\"$t('productions.delete_error')\"\n      :lock-text=\"currentLockText\"\n      @cancel=\"modals.isDeleteDisplayed = false\"\n      @confirm=\"confirmDeleteProduction\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport ProductionList from '@/components/lists/ProductionList'\nimport EditProductionModal from '@/components/modals/EditProductionModal'\nimport HardDeleteModal from '@/components/modals/HardDeleteModal'\nimport ButtonLink from '@/components/widgets/ButtonLink'\nimport PageTitle from '@/components/widgets/PageTitle'\n\nexport default {\n  name: 'productions',\n\n  components: {\n    ButtonLink,\n    HardDeleteModal,\n    EditProductionModal,\n    PageTitle,\n    ProductionList\n  },\n\n  data() {\n    return {\n      errors: {\n        del: false,\n        edit: false\n      },\n      loading: {\n        del: false,\n        edit: false\n      },\n      modals: {\n        isNewDisplayed: false,\n        isDeleteDisplayed: false\n      },\n      productionToDelete: null,\n      productionToEdit: null,\n      choices: []\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'isProductionsLoading',\n      'isProductionsLoadingError',\n      'productionAvatarFormData',\n      'productions'\n    ]),\n\n    currentLockText() {\n      return this.productionToDelete?.name || ''\n    }\n  },\n\n  created() {\n    this.loadProductions()\n  },\n\n  methods: {\n    ...mapActions([\n      'deleteProduction',\n      'loadProductions',\n      'storeProductionPicture',\n      'uploadProductionAvatar'\n    ]),\n\n    // Actions\n\n    confirmEditProduction(form) {\n      let action = 'newProduction'\n      const isEditing = this.productionToEdit && this.productionToEdit.id\n      if (isEditing) {\n        action = 'editProduction'\n        form.id = this.productionToEdit.id\n      }\n\n      this.loading.edit = true\n      this.errors.edit = false\n      this.$store\n        .dispatch(action, form)\n        .then(() => {\n          if (isEditing && this.productionAvatarFormData) {\n            return this.uploadProductionAvatar(form.id)\n          } else {\n            return Promise.resolve()\n          }\n        })\n        .then(() => {\n          this.modals.isNewDisplayed = false\n          this.loading.edit = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    confirmDeleteProduction() {\n      this.loading.del = true\n      this.errors.del = false\n      this.deleteProduction(this.productionToDelete)\n        .then(() => {\n          this.modals.isDeleteDisplayed = false\n          this.loading.del = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.del = true\n          this.loading.del = false\n        })\n    },\n\n    deleteText() {\n      const production = this.productionToDelete\n      if (production) {\n        return this.$t('productions.delete_text', { name: production.name })\n      } else {\n        return ''\n      }\n    },\n\n    // Events\n\n    onEditClicked(production) {\n      this.productionToEdit = production\n      this.modals.isNewDisplayed = true\n    },\n\n    onDeleteClicked(production) {\n      this.productionToDelete = production\n      this.modals.isDeleteDisplayed = true\n    },\n\n    onNewClicked(production) {\n      this.productionToEdit = {}\n      this.modals.isNewDisplayed = true\n    },\n\n    onProductionPictureSelected(formData) {\n      this.storeProductionPicture(formData)\n    }\n  },\n\n  watch: {},\n\n  metaInfo() {\n    return {\n      title: `${this.$t('productions.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"names":["_sfc_main","ProductionNameCell","RowActionsCell","TableInfo","mapGetters","p","mapActions","originalStatus","value","_a","PRODUCTION_STYLE_OPTIONS","style","DownloadIcon","EditIcon","PlusIcon","RotateCcwIcon","TrashIcon","UploadIcon","ButtonLink","HardDeleteModal","EditProductionModal","PageTitle","ProductionList","form","action","isEditing","err","production","formData"],"mappings":"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"}