{"version":3,"file":"Departments-B0tEytwd.js","sources":["../../src/components/lists/DepartmentList.vue","../../src/components/modals/EditDepartmentsModal.vue","../../src/components/pages/Departments.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\">\n          <tr>\n            <th scope=\"col\" class=\"name\">\n              {{ $t('departments.fields.name') }}\n            </th>\n            <th scope=\"col\">{{ $t('departments.fields.color') }}</th>\n            <th scope=\"col\" class=\"actions\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\" v-if=\"entries.length > 0\">\n          <tr class=\"datatable-row\" v-for=\"entry in entries\" :key=\"entry.id\">\n            <td class=\"name\">\n              {{ entry.name }}\n            </td>\n            <td class=\"color\">\n              <div>\n                <span :style=\"{ background: entry.color }\"> </span>\n              </div>\n            </td>\n            <row-actions-cell\n              :entry-id=\"entry.id\"\n              @edit-clicked=\"$emit('edit-clicked', entry)\"\n              @delete-clicked=\"$emit('delete-clicked', entry)\"\n            />\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\"> </table-info>\n    <p class=\"has-text-centered nb-asset-types\">\n      {{ entries.length }} {{ $tc('departments.number', entries.length) }}\n    </p>\n  </div>\n</template>\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport RowActionsCell from '@/components/cells/RowActionsCell'\nimport TableInfo from '@/components/widgets/TableInfo'\n\nexport default {\n  name: 'department-list',\n  props: ['entries', 'isLoading', 'isError'],\n  data() {\n    return {}\n  },\n  components: {\n    RowActionsCell,\n    TableInfo\n  },\n  computed: {\n    ...mapGetters([])\n  },\n  methods: {\n    ...mapActions([])\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.color {\n  width: 20px;\n  height: 20px;\n  text-align: center;\n}\n\n.color span {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n}\n\n.datatable-body tr:first-child th,\n.datatable-body tr:first-child td {\n  border-top: 0;\n}\n\n.name {\n  width: 300px;\n  padding: 1em;\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      modal: true,\n      'is-active': active\n    }\"\n  >\n    <div class=\"modal-background\" @click=\"$emit('cancel')\"></div>\n    <div class=\"modal-content\">\n      <div class=\"box\">\n        <h1 class=\"title\" v-if=\"departmentToEdit && departmentToEdit.id\">\n          {{ $t('departments.edit_title') }} {{ departmentToEdit.name }}\n        </h1>\n        <h1 class=\"title\" v-else>\n          {{ $t('departments.new_departments') }}\n        </h1>\n        <form v-on:submit.prevent>\n          <text-field\n            ref=\"nameField\"\n            :label=\"$t('departments.fields.name')\"\n            :maxlength=\"30\"\n            v-model=\"form.name\"\n            v-focus\n          />\n          <color-field\n            ref=\"colorField\"\n            :label=\"$t('departments.fields.color')\"\n            v-model=\"form.color\"\n          />\n          <combobox-boolean\n            :label=\"$t('main.archived')\"\n            @enter=\"runConfirmation\"\n            v-model=\"form.archived\"\n            v-if=\"isEditing\"\n          />\n        </form>\n        <modal-footer\n          :error-text=\"$t('departments.create_error')\"\n          :is-error=\"isError\"\n          :is-loading=\"isLoading\"\n          @confirm=\"runConfirmation\"\n          @cancel=\"$emit('cancel')\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { modalMixin } from '@/components/modals/base_modal'\n\nimport ColorField from '@/components/widgets/ColorField'\nimport ComboboxBoolean from '@/components/widgets/ComboboxBoolean'\nimport ModalFooter from '@/components/modals/ModalFooter'\nimport TextField from '@/components/widgets/TextField'\n\nexport default {\n  name: 'edit-departments-modal',\n  mixins: [modalMixin],\n  components: {\n    ColorField,\n    ComboboxBoolean,\n    ModalFooter,\n    TextField\n  },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    departmentToEdit: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  data() {\n    return {\n      form: {\n        name: '',\n        color: '',\n        id: null\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters(['assetTypes', 'assetTypeStatusOptions']),\n\n    isEditing() {\n      return this.departmentToEdit && this.departmentToEdit.id\n    }\n  },\n\n  methods: {\n    ...mapActions([]),\n\n    runConfirmation() {\n      this.$emit('confirm', this.form)\n    }\n  },\n\n  watch: {\n    active() {\n      if (this.active) {\n        setTimeout(() => {\n          this.$refs.nameField.focus()\n        }, 100)\n      }\n    },\n\n    departmentToEdit() {\n      if (this.isEditing) {\n        this.form.name = this.departmentToEdit.name\n        this.form.color = this.departmentToEdit.color\n        this.form.id = this.departmentToEdit.id\n        this.form.archived = this.departmentToEdit.archive\n      } else {\n        this.form = {\n          name: '',\n          color: '',\n          id: null,\n          archived: String(this.departmentToEdit.archive === true)\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.modal-content .box p.text {\n  margin-bottom: 1em;\n}\n\n.is-danger {\n  color: #ff3860;\n  font-style: italic;\n}\n</style>\n","<template>\n  <div class=\"departments page fixed-page\">\n    <list-page-header\n      :title=\"$t('departments.title')\"\n      :new-entry-label=\"$t('departments.new_departments')\"\n      :is-exportable=\"isActiveTab\"\n      @export-clicked=\"onExportClicked\"\n      @new-clicked=\"onNewClicked\"\n    />\n\n    <route-tabs\n      class=\"mt2\"\n      :active-tab=\"activeTab\"\n      :tabs=\"tabs\"\n      route-name=\"departments\"\n    />\n\n    <department-list\n      class=\"department-list\"\n      :entries=\"departmentList\"\n      :is-loading=\"loading.departments\"\n      :is-error=\"errors.departments\"\n      @edit-clicked=\"onEditClicked\"\n      @delete-clicked=\"onDeleteClicked\"\n    />\n\n    <edit-departments-modal\n      :active=\"modals.edit\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :department-to-edit=\"departmentToEdit\"\n      @cancel=\"modals.edit = false\"\n      @confirm=\"confirmEditDepartment\"\n    />\n\n    <delete-modal\n      :active=\"modals.del\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText\"\n      :error-text=\"$t('departments.delete_error')\"\n      @cancel=\"modals.del = false\"\n      @confirm=\"confirmDeleteDepartment\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport csv from '@/lib/csv'\nimport stringHelpers from '@/lib/string'\n\nimport DeleteModal from '@/components/modals/DeleteModal'\nimport DepartmentList from '@/components/lists/DepartmentList.vue'\nimport EditDepartmentsModal from '@/components/modals/EditDepartmentsModal'\nimport ListPageHeader from '@/components/widgets/ListPageHeader'\nimport RouteTabs from '@/components/widgets/RouteTabs'\n\nexport default {\n  name: 'departments',\n\n  components: {\n    DeleteModal,\n    DepartmentList,\n    EditDepartmentsModal,\n    ListPageHeader,\n    RouteTabs\n  },\n\n  data() {\n    return {\n      activeTab: 'active',\n      departmentToEdit: null,\n      departmentToDelete: null,\n      errors: {\n        departments: false,\n        edit: false,\n        del: false\n      },\n      loading: {\n        departments: false,\n        edit: false,\n        del: false\n      },\n      modals: {\n        del: false,\n        edit: false\n      },\n      tabs: [\n        {\n          name: 'active',\n          label: this.$t('main.active')\n        },\n        {\n          name: 'archived',\n          label: this.$t('main.archived')\n        }\n      ]\n    }\n  },\n\n  mounted() {\n    this.activeTab = this.$route.query.tab || 'active'\n    this.loading.departments = true\n    this.errors.departments = false\n    this.loadDepartments()\n      .then(() => {\n        this.loading.departments = false\n        this.errors.departments = false\n      })\n      .catch(() => {\n        this.loading.departments = false\n        this.errors.departments = true\n      })\n  },\n\n  computed: {\n    ...mapGetters(['departments', 'archivedDepartments']),\n\n    isActiveTab() {\n      return this.activeTab === 'active'\n    },\n\n    departmentList() {\n      return this.isActiveTab ? this.departments : this.archivedDepartments\n    },\n\n    deleteText() {\n      if (this.departmentToDelete) {\n        return this.$t('departments.delete_text', {\n          name: this.departmentToDelete.name\n        })\n      } else {\n        return ''\n      }\n    }\n  },\n\n  methods: {\n    ...mapActions(['deleteDepartment', 'loadDepartments', 'newDepartment']),\n\n    onExportClicked() {\n      const name = stringHelpers.slugify(this.$t('departments.title'))\n      const headers = [\n        this.$t('main.type'),\n        this.$t('departments.fields.name'),\n        this.$t('departments.fields.color')\n      ]\n      const entries = [headers].concat(\n        this.departments.map(department => [\n          department.type,\n          department.name,\n          department.color\n        ])\n      )\n      csv.buildCsvFile(name, entries)\n    },\n\n    onNewClicked() {\n      this.departmentToEdit = { name: '', color: '#999999' }\n      this.modals.edit = true\n    },\n\n    onEditClicked(department) {\n      this.departmentToEdit = department\n      this.modals.edit = true\n    },\n\n    confirmEditDepartment(form) {\n      let action = 'newDepartment'\n      if (this.departmentToEdit && this.departmentToEdit.id) {\n        action = 'editDepartment'\n        form.id = this.departmentToEdit.id\n      }\n      this.loading.edit = true\n      this.errors.edit = false\n      this.$store\n        .dispatch(action, form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.edit = false\n        })\n        .catch(() => {\n          this.loading.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    // Delete\n    onDeleteClicked(department) {\n      this.departmentToDelete = department\n      this.modals.del = true\n    },\n\n    async confirmDeleteDepartment() {\n      this.loading.del = true\n      this.errors.del = false\n      try {\n        await this.deleteDepartment(this.departmentToDelete)\n        this.loading.del = false\n        this.modals.del = false\n      } catch (e) {\n        this.loading.del = false\n        this.errors.del = true\n      }\n    }\n  },\n\n  watch: {\n    $route() {\n      this.activeTab = this.$route.query.tab\n    }\n  },\n\n  metaInfo() {\n    return {\n      title: `${this.$t('departments.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.department-list {\n  margin-top: 0;\n}\n</style>\n"],"names":["_sfc_main","RowActionsCell","TableInfo","mapGetters","mapActions","modalMixin","ColorField","ComboboxBoolean","ModalFooter","TextField","DeleteModal","DepartmentList","EditDepartmentsModal","ListPageHeader","RouteTabs","name","stringHelpers","entries","department","csv","form","action"],"mappings":"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"}