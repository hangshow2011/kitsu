{"version":3,"file":"EntitySearch-B8PX8KHj.js","sources":["../../src/components/pages/EntitySearch.vue"],"sourcesContent":["<template>\n  <div class=\"entity-search page\">\n    <form class=\"search-form\" @submit.prevent=\"onResultSelected()\">\n      <div>\n        <combobox-production\n          class=\"flexrow-item production-field\"\n          :label=\"$t('main.production')\"\n          :production-list=\"productionList\"\n          v-model=\"productionId\"\n        />\n      </div>\n\n      <div class=\"search-field\">\n        <span class=\"search-icon\">\n          <search-icon width=\"20\" />\n        </span>\n        <input\n          ref=\"search-field\"\n          class=\"input\"\n          :placeholder=\"$t('search.placeholder')\"\n          v-model.trim=\"searchQuery\"\n        />\n      </div>\n      <div class=\"search-options pa1 flexrow\">\n        <checkbox\n          class=\"flexrow-item\"\n          :toggle=\"true\"\n          :label=\"$t('assets.title')\"\n          @change=\"search\"\n          v-model=\"searchFilter.assets\"\n        />\n        <checkbox\n          class=\"flexrow-item\"\n          :toggle=\"true\"\n          :label=\"$t('shots.title')\"\n          @change=\"search\"\n          v-model=\"searchFilter.shots\"\n        />\n\n        <div class=\"filler\"></div>\n        <span class=\"flexrow-item no-margin\">\n          {{ $t('search.limit') }}\n        </span>\n        <combobox\n          class=\"search-limit flexrow-item\"\n          :options=\"limitOptions\"\n          :with-margin=\"false\"\n          @input=\"search\"\n          v-model=\"limit\"\n        />\n      </div>\n    </form>\n    <div class=\"search-results mb2\">\n      <div class=\"has-text-centered\" v-if=\"searchQuery.length < 3\">\n        {{ $t('main.search.type') }}\n      </div>\n      <div class=\"has-text-centered\" v-else-if=\"noSearchFilters\">\n        {{ $t('main.search.no_filter') }}\n      </div>\n      <div v-else-if=\"isLoading\">\n        <spinner />\n      </div>\n      <div v-else>\n        <div class=\"pb1\" v-if=\"this.searchFilter.assets\">\n          <h2 class=\"mt0\">\n            {{ $t('assets.title') }} ({{ this.results.assets?.length || 0 }})\n          </h2>\n          <div class=\"has-text-centered\" v-if=\"!this.results.assets?.length\">\n            {{ $t('main.search.no_result') }}\n          </div>\n          <div class=\"result-list\" v-else>\n            <div\n              class=\"result flexcolumn\"\n              :class=\"{\n                'selected-result': flattenResults[selectedIndex] === entity\n              }\"\n              :key=\"entity.id\"\n              @mouseover=\"selectResultById(entity.id)\"\n              v-for=\"entity in this.results.assets\"\n            >\n              <entity-preview\n                :empty-height=\"200\"\n                :empty-width=\"300\"\n                :height=\"200\"\n                :width=\"300\"\n                :entity=\"entity\"\n                is-rounded-top-border\n              />\n              <router-link\n                class=\"result-description\"\n                :id=\"`result-link-${entity.id}`\"\n                :to=\"entityPath(entity, 'asset')\"\n              >\n                <div class=\"production-name\">\n                  {{ entity.project_name }}\n                </div>\n                <div class=\"entity-name\">\n                  {{ entity.asset_type_name }} / {{ entity.name }}\n                </div>\n                <div class=\"match\">\n                  <span class=\"match-icon\"><search-icon width=\"15\" /></span>\n                  {{ getMatchDetails(entity) }}\n                </div>\n              </router-link>\n            </div>\n          </div>\n          <p\n            class=\"has-text-centered mt2\"\n            v-if=\"\n              results.assets.length !== 0 && results.assets.length % 12 === 0\n            \"\n          >\n            <button\n              class=\"button is-link\"\n              @click=\"loadMoreResults('assets')\"\n              v-if=\"!isLoadingMoreAssets\"\n            >\n              {{ $t('main.load_more') }}\n            </button>\n            <spinner v-else />\n          </p>\n        </div>\n        <div class=\"pb1\" v-if=\"this.searchFilter.shots\">\n          <h2 class=\"mt1\">\n            {{ $t('shots.title') }} ({{ this.results.shots?.length || 0 }})\n          </h2>\n          <div class=\"has-text-centered\" v-if=\"!this.results.shots?.length\">\n            {{ $t('main.search.no_result') }}\n          </div>\n          <div class=\"result-list\" v-else>\n            <div\n              class=\"result flexcolumn\"\n              :class=\"{\n                'selected-result': flattenResults[selectedIndex] === entity\n              }\"\n              :key=\"entity.id\"\n              @mouseover=\"selectResultById(entity.id)\"\n              v-for=\"entity in this.results.shots\"\n            >\n              <entity-preview\n                :empty-height=\"200\"\n                :empty-width=\"300\"\n                :height=\"200\"\n                :width=\"300\"\n                :entity=\"entity\"\n                is-rounded-top-border\n              />\n              <router-link\n                class=\"result-description\"\n                :id=\"`result-link-${entity.id}`\"\n                :to=\"entityPath(entity, 'shot')\"\n              >\n                <div class=\"production-name\">\n                  {{ entity.project_name }}\n                </div>\n                <div class=\"entity-name\">\n                  <template v-if=\"entity.episode_name\">\n                    {{ entity.episode_name }} /\n                  </template>\n                  {{ entity.sequence_name }} / {{ entity.name }}\n                </div>\n                <div class=\"match\">\n                  <span class=\"match-icon\"><search-icon width=\"15\" /></span>\n                  <span class=\"match-details\">{{\n                    getMatchDetails(entity)\n                  }}</span>\n                </div>\n              </router-link>\n            </div>\n          </div>\n          <p\n            class=\"has-text-centered mt2\"\n            v-if=\"results.shots.length !== 0 && results.shots.length % 12 === 0\"\n          >\n            <button\n              class=\"button is-link\"\n              @click=\"loadMoreResults('shots')\"\n              v-if=\"!isLoadingMoreShots\"\n            >\n              {{ $t('main.load_more') }}\n            </button>\n            <spinner v-else />\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * Page to allow wide search on every entities stored in the open projects.\n */\nimport { mapGetters, mapActions } from 'vuex'\nimport { getEntityPath, getPersonPath } from '@/lib/path'\n\nimport { SearchIcon } from 'vue-feather-icons'\nimport stringHelpers from '@/lib/string'\n\nimport Checkbox from '@/components/widgets/Checkbox'\nimport Combobox from '@/components/widgets/Combobox'\nimport ComboboxProduction from '@/components/widgets/ComboboxProduction'\nimport EntityPreview from '@/components/widgets/EntityPreview'\nimport Spinner from '@/components/widgets/Spinner'\n\nconst AVAILABLE_LIMITS = [12, 24, 48]\n\nexport default {\n  name: 'entity-search',\n  mixins: [],\n\n  components: {\n    Checkbox,\n    Combobox,\n    ComboboxProduction,\n    EntityPreview,\n    SearchIcon,\n    Spinner\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      isLoadingMoreAssets: false,\n      isLoadingMoreShots: false,\n      limit: AVAILABLE_LIMITS[0],\n      limitOptions: AVAILABLE_LIMITS.map(value => ({ label: value, value })),\n      productionId: '',\n      selectedIndex: 0,\n      searchQuery: '',\n      searchFilter: {\n        assets: true,\n        shots: true,\n        persons: false\n      },\n      results: {\n        assets: [],\n        shots: [],\n        persons: []\n      }\n    }\n  },\n\n  props: {},\n\n  mounted() {\n    window.addEventListener('keydown', event => {\n      if (\n        (event.ctrlKey || event.metaKey) &&\n        event.altKey &&\n        event.keyCode === 70\n      ) {\n        this.searchField.focus()\n      } else if (event.keyCode === 40) {\n        this.selectNext()\n      } else if (event.keyCode === 38) {\n        this.selectPrevious()\n      }\n    })\n\n    if (this.$route.query.search) {\n      this.searchQuery = this.$route.query.search\n    }\n\n    this.searchField.focus()\n  },\n\n  computed: {\n    ...mapGetters(['openProductions', 'productionMap']),\n\n    searchField() {\n      return this.$refs['search-field']\n    },\n\n    flattenResults() {\n      let values = []\n      if (this.searchFilter.assets) {\n        values = values.concat(this.results.assets)\n      }\n      if (this.searchFilter.shots) {\n        values = values.concat(this.results.shots)\n      }\n      if (this.searchFilter.persons) {\n        values = values.concat(this.results.persons)\n      }\n      return values\n    },\n\n    noSearchFilters() {\n      return (\n        !this.searchFilter.assets && !this.searchFilter.shots\n        // && !this.searchFilter.persons\n      )\n    },\n\n    productionList() {\n      return [\n        {\n          id: '',\n          name: this.$t('main.all')\n        }\n      ].concat([...this.openProductions])\n    }\n  },\n\n  methods: {\n    ...mapActions(['searchData']),\n\n    search() {\n      this.isLoading = true\n      const index_names = Object.entries(this.searchFilter)\n        .map(([k, v]) => (v ? k : undefined))\n        .filter(Boolean)\n\n      this.searchData({\n        query: this.searchQuery,\n        limit: this.limit,\n        productionId: this.productionId,\n        index_names\n      })\n        .then(results => {\n          delete results.persons\n          this.results = results\n        })\n        .catch(console.error)\n        .finally(() => {\n          this.isLoading = false\n        })\n    },\n\n    loadMoreResults(indexName) {\n      const index_names = [indexName]\n      const loadingField = `isLoadingMore${stringHelpers.capitalize(indexName)}`\n      this[loadingField] = true\n\n      this.searchData({\n        query: this.searchQuery,\n        limit: this.limit,\n        offset: this.results[indexName].length,\n        productionId: this.productionId,\n        index_names\n      })\n        .then(results => {\n          this.results[indexName] = this.results[indexName].concat(\n            results[indexName]\n          )\n        })\n        .catch(console.error)\n        .finally(() => {\n          this[loadingField] = false\n        })\n    },\n\n    selectPrevious() {\n      this.selectedIndex--\n      if (this.selectedIndex < 0) {\n        this.selectedIndex = this.flattenResults.length - 1\n      }\n      this.scrollToSelection()\n    },\n\n    selectNext() {\n      this.selectedIndex++\n      if (this.selectedIndex >= this.flattenResults.length) {\n        this.selectedIndex = 0\n      }\n      this.scrollToSelection()\n    },\n\n    scrollToSelection() {\n      const item = this.flattenResults[this.selectedIndex]\n      if (item) {\n        document.getElementById(`result-link-${item.id}`).scrollIntoView(false)\n      }\n    },\n\n    selectResultById(id) {\n      this.selectedIndex = this.flattenResults.findIndex(item => item.id === id)\n    },\n\n    onResultSelected() {\n      const item = this.flattenResults[this.selectedIndex]\n      if (item) {\n        document.getElementById(`result-link-${item.id}`).click()\n      }\n    },\n\n    clearSearchResult() {\n      this.results = {\n        assets: [],\n        shots: [],\n        persons: []\n      }\n    },\n\n    entityPath(entity, section) {\n      const project = this.productionMap.get(entity.project_id)\n      const isTVShow = project.production_type === 'tvshow'\n      let episodeId = null\n      if (isTVShow) episodeId = entity.episode_id || 'main'\n      return getEntityPath(entity.id, entity.project_id, section, episodeId)\n    },\n\n    personPath(person) {\n      return getPersonPath(person.id)\n    },\n\n    getMatchDetails(entity) {\n      const target = entity.matched_terms.join(', ')\n      return this.$t('search.match_details', {\n        target\n      })\n    }\n  },\n\n  watch: {\n    productionId() {\n      this.search()\n    },\n\n    searchQuery() {\n      if (this.searchQuery.length) {\n        this.$router.push({ query: { search: this.searchQuery } })\n      } else {\n        this.$router.push({ query: {} })\n      }\n\n      if (this.searchQuery.length > 2) {\n        this.search()\n      } else {\n        this.clearSearchResult()\n      }\n\n      this.selectedIndex = 0\n    }\n  },\n\n  metaInfo() {\n    return {\n      title: `${this.$t('search.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mt0 {\n  margin-top: 0;\n}\n\n.search-form {\n  max-width: 800px;\n  margin: auto;\n}\n\n.search-field {\n  padding-top: 0;\n  position: relative;\n  width: 100%;\n\n  .input {\n    font-size: 1.3em;\n    border-radius: 10px;\n    padding-left: 40px;\n  }\n\n  .search-icon {\n    position: absolute;\n    color: $grey;\n    z-index: 4;\n    top: 15px;\n    left: 10px;\n  }\n}\n\n.production-field {\n  margin-bottom: 1em;\n  margin-top: 1em;\n}\n\n.search-options {\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 0 2em;\n\n  .search-filter {\n    gap: 2em;\n  }\n\n  .search-limit {\n    display: inline-flex;\n    align-items: center;\n    gap: 0.5em;\n  }\n}\n\n.search-results {\n  max-width: 1260px; // 300px * 4 + gap * 3\n  margin-left: auto;\n  margin-right: auto;\n\n  .result-list {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 20px;\n  }\n\n  .result {\n    height: 300px;\n    background: var(--background);\n    border-radius: 1em;\n    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n\n    .dark & {\n      background: var(--background-alt);\n    }\n\n    &.selected-result {\n      background: var(--background-hover);\n    }\n\n    .result-description {\n      max-width: 300px;\n      color: var(--text-strong);\n      font-weight: bold;\n      padding: 0.3em 1em;\n\n      .production-name {\n        font-size: 0.9em;\n        text-transform: uppercase;\n        font-weight: 500;\n        color: var(--text);\n      }\n    }\n\n    .match {\n      display: inline-flex;\n      color: var(--text-alt);\n      font-weight: normal;\n      margin-top: 0.5em;\n      opacity: 0.7;\n\n      .match-icon {\n        margin-top: -2px;\n        margin-right: 0.5em;\n      }\n    }\n  }\n}\n</style>\n"],"names":["AVAILABLE_LIMITS","_sfc_main","Checkbox","Combobox","ComboboxProduction","EntityPreview","SearchIcon","Spinner","value","event","mapGetters","values","mapActions","index_names","k","v","results","indexName","loadingField","stringHelpers","item","id","entity","section","isTVShow","episodeId","getEntityPath","person","getPersonPath","target"],"mappings":"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"}