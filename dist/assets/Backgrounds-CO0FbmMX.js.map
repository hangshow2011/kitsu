{"version":3,"file":"Backgrounds-CO0FbmMX.js","sources":["../../src/components/lists/BackgroundList.vue","../../src/components/modals/EditBackgroundModal.vue","../../src/components/pages/Backgrounds.vue"],"sourcesContent":["<template>\n  <div class=\"data-list\">\n    <div class=\"datatable-wrapper\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\">\n          <tr>\n            <th scope=\"col\" class=\"name\">\n              {{ $t('backgrounds.fields.name') }}\n            </th>\n            <th scope=\"col\" class=\"is-default\">\n              {{ $t('backgrounds.fields.is_default') }}\n            </th>\n            <th scope=\"col\" class=\"actions\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\">\n          <tr class=\"datatable-row\" v-for=\"entry in entries\" :key=\"entry.id\">\n            <td class=\"name\">\n              <span class=\"flexrow\">\n                <a\n                  :href=\"entry.url\"\n                  target=\"_blank\"\n                  class=\"thumbnail-wrapper thumbnail-picture entity-thumbnail flexrow-item\"\n                >\n                  <img\n                    :src=\"entry.thumbnail\"\n                    :alt=\"entry.name\"\n                    width=\"100\"\n                    height=\"67\"\n                  />\n                </a>\n                {{ entry.name }}\n              </span>\n            </td>\n            <boolean-cell class=\"is-default\" :value=\"entry.is_default\" />\n            <row-actions-cell\n              :entry-id=\"entry.id\"\n              :hide-delete=\"entry.is_default === true\"\n              @edit-clicked=\"$emit('edit-clicked', entry)\"\n              @delete-clicked=\"$emit('delete-clicked', entry)\"\n            />\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <table-info :is-loading=\"isLoading\" :is-error=\"isError\" />\n\n    <p class=\"has-text-centered\">\n      {{ entries.length }} {{ $tc('backgrounds.number', entries.length) }}\n    </p>\n  </div>\n</template>\n\n<script>\nimport BooleanCell from '@/components/cells/BooleanCell'\nimport RowActionsCell from '@/components/cells/RowActionsCell'\nimport TableInfo from '@/components/widgets/TableInfo'\n\nexport default {\n  name: 'background-list',\n\n  props: {\n    entries: {\n      type: Array,\n      default: () => []\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  components: {\n    BooleanCell,\n    RowActionsCell,\n    TableInfo\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.datatable-body tr:first-child th,\n.datatable-body tr:first-child td {\n  border-top: 0;\n}\n\n.name {\n  width: 300px;\n  min-width: 300px;\n  font-weight: bold;\n  word-break: break-word;\n\n  .entity-thumbnail {\n    display: flex;\n    border-radius: 5px;\n    max-width: none;\n\n    img {\n      background-color: black;\n      border-radius: inherit;\n      min-width: 100px;\n    }\n  }\n}\n\n.is-default {\n  text-align: center;\n  width: 140px;\n  min-width: 140px;\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      modal: true,\n      'is-active': active\n    }\"\n  >\n    <div class=\"modal-background\" @click=\"$emit('cancel')\"></div>\n\n    <div class=\"modal-content\">\n      <div class=\"box\">\n        <h1 class=\"title\" v-if=\"isEditing\">\n          {{ $t('backgrounds.edit_background') }} {{ backgroundToEdit.name }}\n        </h1>\n        <h1 class=\"title\" v-else>\n          {{ $t('backgrounds.new_background') }}\n        </h1>\n\n        <form v-on:submit.prevent>\n          <div class=\"field\" v-if=\"!isEditing\">\n            <label class=\"label\"> {{ $t('backgrounds.fields.file') }}</label>\n            <file-upload\n              ref=\"fileUpload\"\n              :label=\"$t('main.select_file')\"\n              accept=\".hdr\"\n              :is-primary=\"false\"\n              @fileselected=\"onFileSelected\"\n            />\n          </div>\n          <text-field\n            ref=\"nameField\"\n            input-class=\"task-status-name\"\n            :label=\"$t('backgrounds.fields.name')\"\n            :maxlength=\"40\"\n            @enter=\"confirmClicked\"\n            v-model.trim=\"form.name\"\n          />\n          <boolean-field\n            :label=\"$t('backgrounds.fields.is_default')\"\n            @enter=\"confirmClicked\"\n            v-model=\"form.is_default\"\n          />\n          <combobox-boolean\n            :label=\"$t('main.archived')\"\n            @enter=\"confirmClicked\"\n            v-model=\"form.archived\"\n            v-if=\"isEditing\"\n          />\n        </form>\n\n        <modal-footer\n          :error-text=\"$t('backgrounds.create_error')\"\n          :is-error=\"isError\"\n          :is-loading=\"isLoading\"\n          @confirm=\"confirmClicked\"\n          @cancel=\"$emit('cancel')\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ModalFooter from '@/components/modals/ModalFooter'\nimport { modalMixin } from '@/components/modals/base_modal'\n\nimport BooleanField from '@/components/widgets/BooleanField'\nimport ComboboxBoolean from '@/components/widgets/ComboboxBoolean'\nimport FileUpload from '@/components/widgets/FileUpload.vue'\nimport TextField from '@/components/widgets/TextField'\n\nexport default {\n  name: 'edit-task-status-modal',\n  mixins: [modalMixin],\n  components: {\n    BooleanField,\n    ComboboxBoolean,\n    FileUpload,\n    ModalFooter,\n    TextField\n  },\n\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    isError: {\n      type: Boolean,\n      default: false\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    backgroundToEdit: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  data() {\n    return {\n      form: {\n        file: null,\n        name: '',\n        is_default: 'false',\n        archived: 'false'\n      }\n    }\n  },\n\n  computed: {\n    isEditing() {\n      return this.backgroundToEdit?.id\n    }\n  },\n\n  methods: {\n    confirmClicked() {\n      if (!this.isEditing && !this.form.file) {\n        return\n      }\n      if (!this.form.name) {\n        this.$refs.nameField.focus()\n        return\n      }\n      this.$emit('confirm', {\n        ...this.form,\n        is_default: this.form.is_default === 'true',\n        archived: this.form.archived === 'true'\n      })\n    },\n\n    onFileSelected(formData) {\n      const file = formData.get('file')\n      this.form.file = formData\n      if (!this.form.name.length) {\n        this.form.name = file.name.slice(0, -4)\n      }\n      this.$nextTick(() => {\n        this.$refs.nameField.focus()\n      })\n    },\n\n    resetForm() {\n      if (this.backgroundToEdit) {\n        this.form = {\n          file: null,\n          name: this.backgroundToEdit.name || '',\n          is_default: String(this.backgroundToEdit.is_default || false),\n          archived: String(this.backgroundToEdit.archived || false)\n        }\n        this.$refs.fileUpload?.reset()\n      }\n    }\n  },\n\n  watch: {\n    backgroundToEdit() {\n      this.resetForm()\n    },\n\n    active() {\n      if (this.active) {\n        this.resetForm()\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.modal-content .box p.text {\n  margin-bottom: 1em;\n}\n</style>\n","<template>\n  <div class=\"backgrounds page fixed-page\">\n    <list-page-header\n      :title=\"$t('backgrounds.title')\"\n      :new-entry-label=\"$t('backgrounds.new_background')\"\n      :is-exportable=\"false\"\n      @new-clicked=\"onNewClicked\"\n    />\n\n    <route-tabs\n      class=\"mt2\"\n      :active-tab=\"activeTab\"\n      :tabs=\"tabs\"\n      route-name=\"backgrounds\"\n    />\n\n    <background-list\n      :entries=\"backgroundsList\"\n      :is-loading=\"loading.list\"\n      :is-error=\"errors.list\"\n      @edit-clicked=\"onEditClicked\"\n      @delete-clicked=\"onDeleteClicked\"\n    />\n\n    <edit-background-modal\n      :active=\"modals.edit\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :background-to-edit=\"backgroundToEdit\"\n      @cancel=\"modals.edit = false\"\n      @confirm=\"confirmEditBackground\"\n    />\n\n    <delete-modal\n      :active=\"modals.del\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :text=\"deleteText()\"\n      :error-text=\"$t('backgrounds.delete_error')\"\n      @cancel=\"modals.del = false\"\n      @confirm=\"confirmDeleteBackground\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport BackgroundList from '@/components/lists/BackgroundList'\nimport DeleteModal from '@/components/modals/DeleteModal'\nimport EditBackgroundModal from '@/components/modals/EditBackgroundModal'\nimport ListPageHeader from '@/components/widgets/ListPageHeader'\nimport RouteTabs from '@/components/widgets/RouteTabs'\n\nexport default {\n  name: 'backgrounds',\n\n  components: {\n    BackgroundList,\n    DeleteModal,\n    EditBackgroundModal,\n    ListPageHeader,\n    RouteTabs\n  },\n\n  data() {\n    return {\n      activeTab: 'active',\n      backgroundToEdit: {},\n      modals: {\n        edit: false,\n        del: false\n      },\n      loading: {\n        edit: false,\n        del: false,\n        list: false\n      },\n      errors: {\n        edit: false,\n        del: false,\n        list: false\n      },\n      tabs: [\n        {\n          name: 'active',\n          label: this.$t('main.active')\n        },\n        {\n          name: 'archived',\n          label: this.$t('main.archived')\n        }\n      ]\n    }\n  },\n\n  mounted() {\n    this.activeTab = this.$route.query.tab || 'active'\n  },\n\n  computed: {\n    ...mapGetters(['archivedBackgrounds', 'backgrounds']),\n\n    backgroundsList() {\n      return this.activeTab === 'active'\n        ? this.backgrounds\n        : this.archivedBackgrounds\n    }\n  },\n\n  methods: {\n    ...mapActions(['deleteBackground']),\n\n    confirmEditBackground(form) {\n      const isNew = !this.backgroundToEdit?.id\n      let action = 'newBackground'\n      if (!isNew) {\n        action = 'saveBackground'\n        form.id = this.backgroundToEdit.id\n      }\n\n      this.loading.edit = true\n      this.errors.edit = false\n      this.$store\n        .dispatch(action, form)\n        .then(() => {\n          this.modals.edit = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.edit = true\n        })\n        .finally(() => {\n          this.loading.edit = false\n        })\n    },\n\n    confirmDeleteBackground() {\n      this.loading.del = true\n      this.errors.del = false\n      this.deleteBackground(this.backgroundToDelete)\n        .then(() => {\n          this.modals.del = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.errors.del = true\n        })\n        .finally(() => {\n          this.loading.del = false\n        })\n    },\n\n    deleteText() {\n      const background = this.backgroundToDelete\n      return background\n        ? this.$t('backgrounds.delete_text', { name: background.name })\n        : ''\n    },\n\n    onNewClicked() {\n      this.backgroundToEdit = {}\n      this.modals.edit = true\n    },\n\n    onEditClicked(background) {\n      this.backgroundToEdit = background\n      this.modals.edit = true\n    },\n\n    onDeleteClicked(background) {\n      this.backgroundToDelete = background\n      this.modals.del = true\n    }\n  },\n\n  watch: {\n    $route() {\n      this.activeTab = this.$route.query.tab || 'active'\n    }\n  },\n\n  metaInfo() {\n    return {\n      title: `${this.$t('backgrounds.title')} - Kitsu`\n    }\n  }\n}\n</script>\n"],"names":["_sfc_main","BooleanCell","RowActionsCell","TableInfo","modalMixin","BooleanField","ComboboxBoolean","FileUpload","ModalFooter","TextField","_a","formData","file","BackgroundList","DeleteModal","EditBackgroundModal","ListPageHeader","RouteTabs","mapGetters","mapActions","form","isNew","action","err","background"],"mappings":"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"}