{"version":3,"file":"Asset-alW2Kw1o.js","sources":["../../src/components/pages/entities/EntityOutputFiles.vue","../../src/components/pages/Asset.vue"],"sourcesContent":["<template>\n  <div class=\"mt1 flexcolumn wrapper output-files\">\n    <div class=\"has-text-centered\" v-if=\"isLoading\">\n      <spinner />\n    </div>\n    <div v-else-if=\"outputFiles.length > 0\">\n      <table class=\"datatable\">\n        <thead class=\"datatable-head\">\n          <tr class=\"datatable-row-header\">\n            <th class=\"tasktype\">\n              {{ $t('entities.output_files.task_type') }}\n            </th>\n            <th class=\"type\">\n              {{ $t('entities.output_files.type') }}\n            </th>\n            <th class=\"name\">\n              {{ $t('entities.output_files.name') }}\n            </th>\n            <th class=\"extension\">\n              {{ $t('entities.output_files.extension') }}\n            </th>\n            <th class=\"revision\">\n              {{ $t('entities.output_files.revision') }}\n            </th>\n            <th class=\"size\">\n              {{ $t('entities.output_files.size') }}\n            </th>\n            <th class=\"status\">\n              {{ $t('entities.output_files.status') }}\n            </th>\n            <th class=\"person\">\n              {{ $t('entities.output_files.person') }}\n            </th>\n            <th class=\"end-cell\"></th>\n          </tr>\n        </thead>\n        <tbody class=\"datatable-body\">\n          <template v-for=\"outputFile in outputFiles\">\n            <tr :key=\"outputFile.id\" class=\"datatable-row\">\n              <task-type-cell\n                class=\"type\"\n                :task-type=\"getTaskType(outputFile)\"\n                :production-id=\"currentProduction.id\"\n              />\n              <td class=\"type\">\n                {{ getOutputType(outputFile).name }}\n              </td>\n              <td class=\"name\">\n                {{ outputFile.name }}\n              </td>\n              <td class=\"extension\">\n                {{ outputFile.extension }}\n              </td>\n              <td class=\"revision\">\n                {{ outputFile.revision }}\n              </td>\n              <td class=\"size\">\n                {{ renderFileSize(outputFile.file_size) }}\n              </td>\n              <td class=\"status\">\n                {{ getFileStatus(outputFile).name }}\n              </td>\n              <people-name-cell\n                class=\"person\"\n                :person=\"personMap.get(outputFile.person_id)\"\n              />\n              <td class=\"end-cell\"></td>\n            </tr>\n            <tr\n              :key=\"'path-' + outputFile.id\"\n              class=\"datatable-row\"\n              v-if=\"outputFile.path\"\n            >\n              <td colspan=\"10\">\n                {{ outputFile.path }}\n              </td>\n            </tr>\n          </template>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"empty\" v-else>\n      {{ $t('entities.output_files.no_output_files') }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { renderFileSize } from '@/lib/render'\n\nimport Spinner from '@/components/widgets/Spinner'\nimport TaskTypeCell from '@/components/cells/TaskTypeCell'\n\nexport default {\n  name: 'entity-output-files',\n  components: {\n    Spinner,\n    TaskTypeCell\n  },\n\n  data() {\n    return {\n      isLoading: false,\n      outputFiles: []\n    }\n  },\n\n  props: {\n    entity: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  mounted() {\n    if (!this.entity) return\n    this.reset()\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentProduction',\n      'isCurrentUserArtist',\n      'personMap',\n      'fileStatusMap',\n      'outputFileTypeMap',\n      'taskMap',\n      'taskTypeMap'\n    ])\n  },\n\n  methods: {\n    ...mapActions([\n      'loadEntityOutputFiles',\n      'loadFileStatuses',\n      'loadOutputTypes'\n    ]),\n\n    getTaskType(outputFile) {\n      return this.taskTypeMap.get(outputFile.task_type_id)\n    },\n\n    getFileStatus(outputFile) {\n      return this.fileStatusMap.get(outputFile.file_status_id)\n    },\n\n    getOutputType(outputFile) {\n      return this.outputFileTypeMap.get(outputFile.output_type_id)\n    },\n\n    getDownloadPath(outputFileId) {\n      const type = this.isMovie ? 'movies' : 'pictures'\n      return `/api/${type}/originals/output-files/${outputFileId}/download`\n    },\n\n    renderFileSize,\n\n    async reset() {\n      this.isLoading = true\n      if (this.fileStatusMap.size === 0) await this.loadFileStatuses()\n      if (this.outputFileTypeMap.size === 0) await this.loadOutputTypes()\n      this.outputFiles = await this.loadEntityOutputFiles(this.entity.id)\n      this.isLoading = false\n    }\n  },\n\n  watch: {\n    entity() {\n      if (this.entity) this.reset()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.datatable-body {\n  overflow-y: auto;\n}\ntable.datatable {\n  table-layout: fixed;\n}\n\ntd.type {\n  width: 100px;\n}\n.revision {\n  width: 80px;\n}\n.extension {\n  width: 80px;\n}\n.size {\n  width: 50px;\n}\n.status {\n  width: 120px;\n}\n.name {\n  width: 250px;\n}\n.person {\n  width: 250px;\n}\n\n.output-files {\n  overflow-y: auto;\n}\n\n.output-thumbnail {\n  cursor: pointer;\n  border-radius: 4px;\n}\n\n.datatable-row-header::after {\n  display: none;\n}\n\n.empty {\n  font-style: italic;\n}\n</style>\n","<template>\n  <div class=\"columns fixed-page asset xyz-in\" xyz=\"fade\">\n    <div class=\"page column main-column\">\n      <div class=\"page-header flexrow\">\n        <!--router-link\n        class=\"flexrow-item has-text-centered back-link ml1\"\n        :to=\"previousAssetPath\"\n      >\n        <chevron-left-icon />\n      </router-link>\n      <router-link\n        class=\"flexrow-item has-text-centered back-link\"\n        :to=\"nextAssetPath\"\n      >\n        <chevron-right-icon />\n      </router-link-->\n        <router-link\n          class=\"flexrow-item has-text-centered back-link ml1\"\n          :to=\"assetsPath\"\n        >\n          <corner-left-up-icon />\n        </router-link>\n        <span class=\"flexrow-item ml2\">\n          <entity-thumbnail\n            class=\"entity-thumbnail\"\n            :entity=\"currentAsset\"\n            :empty-width=\"100\"\n            :empty-height=\"60\"\n            :width=\"100\"\n            v-if=\"currentAsset\"\n          />\n        </span>\n        <div class=\"entity-title flexrow-item\">\n          {{ title }}\n        </div>\n        <div class=\"filler\"></div>\n        <div\n          class=\"ready-for flexrow block mr0\"\n          v-if=\"\n            currentAsset &&\n            currentAsset.ready_for &&\n            currentAsset.ready_for !== 'None'\n          \"\n        >\n          <span class=\"flexrow-item\">\n            {{ $t('assets.fields.ready_for') }}\n          </span>\n          <task-type-name\n            class=\"flexrow-item\"\n            :task-type=\"taskTypeMap.get(currentAsset.ready_for)\"\n            :current-production-id=\"this.currentProduction.id\"\n          />\n        </div>\n      </div>\n\n      <div class=\"asset-data block\">\n        <route-section-tabs\n          class=\"section-tabs\"\n          :activeTab=\"currentSection\"\n          :route=\"$route\"\n          :tabs=\"assetTabs\"\n        />\n\n        <div class=\"flexrow mt1\">\n          <span\n            class=\"tag tag-standby\"\n            v-show=\"\n              currentSection === 'casting' && currentAsset.is_casting_standby\n            \"\n          >\n            {{ $t('breakdown.fields.standby') }}\n          </span>\n          <span\n            class=\"flexrow-item mt05\"\n            v-show=\"currentSection === 'schedule'\"\n          >\n            {{ $t('schedule.zoom_level') }}:\n          </span>\n          <combobox-number\n            class=\"zoom-level flexrow-item\"\n            :options=\"zoomOptions\"\n            is-simple\n            v-model=\"zoomLevel\"\n            v-show=\"currentSection === 'schedule'\"\n          />\n        </div>\n\n        <div class=\"flexrow infos\" v-show=\"currentSection === 'infos'\">\n          <div class=\"flexrow-item flexcolumn entity-infos\">\n            <page-subtitle :text=\"$t('main.tasks')\" />\n            <entity-task-list\n              class=\"task-list\"\n              :entries=\"localTasks\"\n              :is-loading=\"!currentAsset\"\n              :is-error=\"false\"\n              @task-selected=\"onTaskSelected\"\n            />\n            <div class=\"flexrow\">\n              <page-subtitle :text=\"$t('main.info')\" />\n              <div class=\"filler\"></div>\n              <div class=\"flexrow-item has-text-right\">\n                <button-simple\n                  icon=\"edit\"\n                  @click=\"modals.edit = true\"\n                  v-if=\"isCurrentUserManager\"\n                />\n              </div>\n            </div>\n\n            <div class=\"table-body\">\n              <table class=\"datatable no-header\" v-if=\"currentAsset\">\n                <tbody class=\"table-body\">\n                  <tr class=\"datatable-row\">\n                    <td class=\"field-label\">\n                      {{ $t('assets.fields.description') }}\n                    </td>\n                    <description-cell :entry=\"currentAsset\" :full=\"true\" />\n                  </tr>\n                  <tr\n                    :key=\"descriptor.id\"\n                    class=\"datatable-row\"\n                    v-for=\"descriptor in assetMetadataDescriptors\"\n                  >\n                    <td class=\"field-label\">{{ descriptor.name }}</td>\n                    <td>\n                      {{\n                        currentAsset.data\n                          ? currentAsset.data[descriptor.field_name]\n                          : ''\n                      }}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"asset-casted-in\" v-show=\"currentSection === 'casting'\">\n          <div v-if=\"currentAsset\">\n            <div\n              v-if=\"\n                currentAsset.castInShotsBySequence &&\n                currentAsset.castInShotsBySequence[0].length > 0\n              \"\n            >\n              <em>Casted in {{ nbShotsCastedIn }} shots</em>\n              <div\n                class=\"sequence-shots\"\n                :key=\"\n                  sequenceShots.length > 0 ? sequenceShots[0].sequence_name : ''\n                \"\n                v-if=\"sequenceShots[0].sequence_name\"\n                v-for=\"sequenceShots in currentAsset.castInShotsBySequence\"\n              >\n                <div class=\"shot-sequence\">\n                  {{\n                    sequenceShots.length > 0\n                      ? sequenceShots[0].sequence_name\n                      : ''\n                  }}\n                </div>\n                <div class=\"shot-list\">\n                  <router-link\n                    class=\"shot-link\"\n                    :key=\"shot.shot_id\"\n                    :to=\"shotPath(shot)\"\n                    v-for=\"shot in sequenceShots\"\n                  >\n                    <entity-thumbnail\n                      class=\"entity-thumbnail\"\n                      :entity=\"shot\"\n                      :square=\"true\"\n                      :empty-width=\"103\"\n                      :empty-height=\"103\"\n                      :with-link=\"false\"\n                    />\n                    <div>\n                      <span class=\"break-word\">{{ shot.shot_name }}</span>\n                      <span v-if=\"shot.nb_occurences > 1\">\n                        ({{ shot.nb_occurences }})\n                      </span>\n                    </div>\n                  </router-link>\n                </div>\n              </div>\n            </div>\n            <div v-else>\n              {{ $t('assets.no_cast_in') }}\n            </div>\n          </div>\n          <table-info\n            :is-loading=\"castIn.isLoading\"\n            :is-error=\"castIn.isError\"\n            v-else\n          />\n\n          <div\n            v-if=\"\n              currentAsset &&\n              currentAsset.castingAssetsByType &&\n              currentAsset.castingAssetsByType[0].length > 0\n            \"\n          >\n            <page-subtitle :text=\"$t('assets.linked')\" />\n            <div\n              v-if=\"\n                currentAsset.castingAssetsByType &&\n                currentAsset.castingAssetsByType[0].length > 0\n              \"\n            >\n              <div\n                class=\"type-assets\"\n                :key=\"\n                  typeAssets.length > 0 ? typeAssets[0].asset_type_name : ''\n                \"\n                v-for=\"typeAssets in currentAsset.castingAssetsByType\"\n              >\n                <div class=\"asset-type\">\n                  {{\n                    typeAssets.length > 0 ? typeAssets[0].asset_type_name : ''\n                  }}\n                  ({{ typeAssets.length }})\n                </div>\n                <div class=\"asset-list\">\n                  <router-link\n                    class=\"asset-link\"\n                    :key=\"asset.id\"\n                    :to=\"{\n                      name: 'asset',\n                      params: {\n                        production_id: currentProduction.id,\n                        asset_id: asset.asset_id\n                      }\n                    }\"\n                    v-for=\"asset in typeAssets\"\n                  >\n                    <entity-thumbnail\n                      class=\"entity-thumbnail\"\n                      :entity=\"asset\"\n                      :square=\"true\"\n                      :empty-width=\"103\"\n                      :empty-height=\"103\"\n                      :with-link=\"false\"\n                    />\n                    <div>\n                      <span class=\"break-word\">{{ asset.asset_name }}</span>\n                      <span v-if=\"asset.nb_occurences > 1\">\n                        ({{ asset.nb_occurences }})\n                      </span>\n                    </div>\n                  </router-link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div\n          class=\"concepts\"\n          v-show=\"currentSection === 'concepts'\"\n          v-if=\"currentAsset\"\n        >\n          <combobox-status\n            :label=\"$t('main.status')\"\n            :task-status-list=\"taskStatusList\"\n            v-model=\"currentConceptStatus\"\n          />\n          <div class=\"concept-list mt1\">\n            <template v-if=\"filteredLinkedConcepts.length\">\n              <concept-card\n                :key=\"'concept-' + concept.id\"\n                :concept=\"concept\"\n                v-for=\"concept in filteredLinkedConcepts\"\n              />\n            </template>\n            <div v-else>\n              {{ $t('assets.no_concept') }}\n            </div>\n          </div>\n        </div>\n\n        <div\n          class=\"schedule mt1\"\n          v-if=\"scheduleItems[0].children.length > 0\"\n          v-show=\"currentSection === 'schedule'\"\n        >\n          <div class=\"wrapper\">\n            <schedule\n              ref=\"schedule-widget\"\n              :start-date=\"tasksStartDate\"\n              :end-date=\"tasksEndDate\"\n              :hierarchy=\"scheduleItems\"\n              :zoom-level=\"zoomLevel\"\n              :is-loading=\"false\"\n              :is-estimation-linked=\"true\"\n              :hide-root=\"true\"\n              :with-milestones=\"false\"\n              @item-changed=\"saveTaskScheduleItem\"\n              @estimation-changed=\"event => saveTaskScheduleItem(event.item)\"\n            />\n          </div>\n        </div>\n\n        <entity-preview-files\n          :entity=\"currentAsset\"\n          v-if=\"currentSection === 'preview-files'\"\n        />\n\n        <entity-time-logs\n          :entity=\"currentAsset\"\n          v-if=\"currentSection === 'time-logs'\"\n        />\n\n        <entity-output-files\n          :entity=\"currentAsset\"\n          v-if=\"currentSection === 'output-files'\"\n        />\n      </div>\n    </div>\n\n    <div class=\"column side-column\" v-show=\"currentSection === 'infos'\">\n      <task-info :task=\"currentTask\" entity-type=\"Asset\" with-actions>\n        <entity-news class=\"news-column\" :entity=\"currentAsset\" />\n      </task-info>\n    </div>\n\n    <edit-asset-modal\n      ref=\"edit-asset-modal\"\n      :active=\"modals.edit\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :asset-to-edit=\"currentAsset\"\n      @cancel=\"modals.edit = false\"\n      @confirm=\"confirmEditAsset\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { CornerLeftUpIcon } from 'vue-feather-icons'\n\nimport { sortByName } from '@/lib/sorting'\nimport { entityMixin } from '@/components/mixins/entity'\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport ConceptCard from '@/components/widgets/ConceptCard'\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber'\nimport ComboboxStatus from '@/components/widgets/ComboboxStatus'\nimport DescriptionCell from '@/components/cells/DescriptionCell'\nimport EditAssetModal from '@/components/modals/EditAssetModal'\nimport EntityNews from '@/components/pages/entities/EntityNews'\nimport EntityOutputFiles from '@/components/pages/entities/EntityOutputFiles'\nimport EntityPreviewFiles from '@/components/pages/entities/EntityPreviewFiles'\nimport EntityTimeLogs from '@/components/pages/entities/EntityTimeLogs'\nimport EntityTaskList from '@/components/lists/EntityTaskList'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport RouteSectionTabs from '@/components/widgets/RouteSectionTabs'\nimport Schedule from '@/components/pages/schedule/Schedule'\nimport TableInfo from '@/components/widgets/TableInfo'\nimport TaskTypeName from '@/components/widgets/TaskTypeName'\nimport TaskInfo from '@/components/sides/TaskInfo'\n\nexport default {\n  name: 'asset',\n  mixins: [entityMixin, formatListMixin],\n  components: {\n    ButtonSimple,\n    ConceptCard,\n    ComboboxNumber,\n    CornerLeftUpIcon,\n    ComboboxStatus,\n    DescriptionCell,\n    EditAssetModal,\n    EntityNews,\n    EntityOutputFiles,\n    EntityPreviewFiles,\n    EntityThumbnail,\n    EntityTaskList,\n    EntityTimeLogs,\n    PageSubtitle,\n    RouteSectionTabs,\n    Schedule,\n    TableInfo,\n    TaskInfo,\n    TaskTypeName\n  },\n\n  data() {\n    return {\n      currentAsset: null,\n      currentTask: null,\n      currentConceptStatus: null,\n      localTasks: [],\n      castIn: {\n        isLoading: false,\n        isError: false\n      },\n      errors: {\n        edit: false\n      },\n      loading: {\n        edit: false\n      },\n      modals: {\n        edit: false,\n        preview: false\n      }\n    }\n  },\n\n  mounted() {\n    this.clearSelectedTasks()\n    this.init()\n  },\n\n  computed: {\n    ...mapGetters([\n      'assetMap',\n      'assetSearchText',\n      'assetMetadataDescriptors',\n      'conceptMap',\n      'currentEpisode',\n      'currentProduction',\n      'getTaskTypePriority',\n      'isTVShow',\n      'isCurrentUserManager',\n      'linkedConcepts',\n      'route',\n      'taskMap',\n      'taskStatusMap',\n      'taskTypeMap',\n      'shotId'\n    ]),\n\n    title() {\n      if (this.currentAsset) {\n        return (\n          `${this.currentAsset.asset_type_name} / ` +\n          `${this.currentAsset.name}`\n        )\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    assetThumbnailPath() {\n      const previewId = this.currentAsset.preview_file_id\n      return `/api/pictures/originals/preview-files/${previewId}.png`\n    },\n\n    isPreview() {\n      return (\n        this.currentAsset &&\n        this.currentAsset.preview_file_id &&\n        this.currentAsset.preview_file_id.length > 0\n      )\n    },\n\n    nbShotsCastedIn() {\n      const castIn = this.currentAsset?.castInShotsBySequence || []\n      return castIn.reduce((acc, shots) => {\n        return acc + shots.length\n      }, 0)\n    },\n\n    previousAssetPath() {\n      const assets = Array.from(this.assetMap.values())\n      if (assets.length === 0) return { name: 'open-productions' }\n      const currentIndex = assets.findIndex(asset => {\n        return asset && this.currentAsset && asset.id === this.currentAsset.id\n      })\n      const index = currentIndex !== 0 ? currentIndex - 1 : assets.length - 1\n      const asset = assets[index]\n      if (!asset) return { name: 'open-productions' }\n      const route = {\n        name: 'asset',\n        params: {\n          production_id: this.currentProduction.id,\n          asset_id: asset.id\n        },\n        query: {\n          search: ''\n        }\n      }\n      if (this.currentEpisode) {\n        route.name = 'episode-asset'\n        route.params.episode_id = this.currentEpisode.id\n      }\n      return route\n    },\n\n    nextAssetPath() {\n      const assets = Array.from(this.assetMap.values())\n      if (assets.length === 0) return { name: 'open-productions' }\n      const currentIndex = assets.findIndex(asset => {\n        return asset && this.currentAsset && asset.id === this.currentAsset.id\n      })\n      const index = currentIndex === assets.length - 1 ? 0 : currentIndex + 1\n      const asset = assets[index]\n      if (!asset) return { name: 'open-productions' }\n      const route = {\n        name: 'asset',\n        params: {\n          production_id: this.currentProduction.id,\n          asset_id: asset.id\n        },\n        query: {\n          search: ''\n        }\n      }\n      if (this.currentEpisode) {\n        route.name = 'episode-asset'\n        route.params.episode_id = this.currentEpisode.id\n      }\n      return route\n    },\n\n    assetsPath() {\n      const route = {\n        name: 'assets',\n        params: {\n          production_id: this.currentProduction.id\n        },\n        query: {\n          search: this.assetSearchText || ''\n        }\n      }\n      if (this.currentEpisode) {\n        route.name = 'episode-assets'\n        route.params.episode_id = this.currentEpisode.id\n      }\n      return route\n    },\n\n    assetNavOptions() {\n      return [\n        ...this.entityNavOptions.slice(0, 2),\n        { label: 'Concepts', value: 'concepts' },\n        ...this.entityNavOptions.slice(2),\n        { label: 'Output Files', value: 'output-files' }\n      ]\n    },\n\n    assetTabs() {\n      return this.assetNavOptions.map(option => {\n        return {\n          label: option.label,\n          name: option.value\n        }\n      })\n    },\n\n    taskStatusList() {\n      const allStatusItem = {\n        id: null,\n        color: '#999',\n        name: this.$t('main.all'),\n        short_name: this.$t('main.all')\n      }\n      const conceptTaskStatusList = sortByName(\n        Array.from(this.taskStatusMap.values()).filter(\n          status => status.for_concept\n        )\n      )\n      return [allStatusItem].concat(conceptTaskStatusList)\n    },\n\n    filteredLinkedConcepts() {\n      return this.currentConceptStatus\n        ? this.linkedConcepts.filter(\n            concept =>\n              concept.tasks[0].task_status_id === this.currentConceptStatus\n          )\n        : this.linkedConcepts\n    },\n\n    allTasksEstimation() {\n      return this.formatDuration(\n        this.localTasks.reduce((acc, task) => {\n          return acc + task.estimation\n        }, 0)\n      )\n    },\n\n    allTasksDuration() {\n      return this.formatDuration(\n        this.localTasks.reduce((acc, task) => {\n          return acc + task.duration\n        }, 0)\n      )\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'clearSelectedTasks',\n      'editAsset',\n      'loadAsset',\n      'loadAssets',\n      'loadAssetCastIn',\n      'loadAssetCasting',\n      'loadLinkedConcepts',\n      'loadShots',\n      'setCurrentEpisode'\n    ]),\n\n    changeTab(tab) {\n      this.selectedTab = tab\n    },\n\n    getCurrentAsset() {\n      return new Promise((resolve, reject) => {\n        const assetId = this.route.params.asset_id\n        this.currentAssetId = assetId\n        if (!assetId) resolve(null)\n        let asset = this.assetMap.get(assetId) || null\n        if (!asset) {\n          if (assetId) {\n            return this.loadAsset(assetId).then(() => {\n              asset = this.assetMap.get(assetId)\n              this.localTasks = asset.tasks.map(taskId =>\n                this.taskMap.get(taskId)\n              )\n              return resolve(asset)\n            })\n          }\n        } else {\n          this.localTasks = asset.tasks.map(taskId => this.taskMap.get(taskId))\n          return resolve(asset)\n        }\n      })\n    },\n\n    getConceptTaskStatus(concept) {\n      return this.taskStatusMap.get(concept.tasks[0].task_status_id)\n    },\n\n    onEditClicked() {\n      this.modals.edit = true\n    },\n\n    confirmEditAsset(form) {\n      form.id = this.currentAsset.id\n      this.loading.edit = true\n      this.errors.edit = false\n      this.editAsset(form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.edit = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    resetData() {\n      this.castIn.isLoading = true\n      if (this.$route.params.episode_id === 'main') {\n        this.setCurrentEpisode('main')\n      }\n      // Next tick is needed to wait for the episode change.\n      this.$nextTick(() => {\n        this.getCurrentAsset()\n          .then(asset => {\n            this.currentAsset = asset\n            return this.loadAssetCastIn(this.currentAsset)\n          })\n          .then(() => this.loadAssetCasting(this.currentAsset))\n          .then(() => {\n            this.castIn.isLoading = false\n          })\n          .then(() => this.loadLinkedConcepts(this.currentAsset))\n          .catch(err => {\n            this.castIn.isError = true\n            this.castIn.isLoading = false\n            console.error(err)\n          })\n      })\n    },\n\n    conceptPath(concept) {\n      return {\n        name: 'concepts',\n        params: {\n          production_id: this.currentProduction.id\n        }\n      }\n    },\n\n    shotPath(shot) {\n      return {\n        name: shot.episode_id ? 'episode-shot' : 'shot',\n        params: {\n          production_id: this.currentProduction.id,\n          shot_id: shot.shot_id,\n          episode_id: shot.episode_id ? shot.episode_id : undefined\n        }\n      }\n    },\n\n    init() {\n      return this.getCurrentAsset()\n        .then(asset => {\n          this.currentAsset = asset\n          this.currentSection = this.route.query.section || 'infos'\n          this.castIn.isLoading = true\n          this.castIn.isError = false\n          if (this.currentAsset) {\n            this.loadAssetCastIn(this.currentAsset)\n              .then(() => this.loadAssetCasting(this.currentAsset))\n              .then(() => {\n                this.castIn.isLoading = false\n              })\n              .then(() => this.loadLinkedConcepts(this.currentAsset))\n              .catch(err => {\n                this.castIn.isLoading = false\n                this.castIn.isError = true\n                console.error(err)\n              })\n          } else {\n            this.resetData()\n          }\n        })\n        .then(() => {\n          setTimeout(() => {\n            if (this.$refs['schedule-widget']) {\n              this.$refs['schedule-widget'].scrollToDate(\n                this.scheduleItems[0].startDate\n              )\n            }\n          }, 100)\n        })\n        .catch(console.error)\n    }\n  },\n\n  watch: {\n    $route() {\n      const assetId = this.route.params.asset_id\n      if (this.currentAsset && this.currentAsset.id !== assetId) {\n        this.init()\n      }\n      this.currentSection = this.route.query.section || 'infos'\n    },\n\n    currentSection() {\n      if (this.currentSection === 'schedule' && this.scheduleItems.length > 0) {\n        if (this.$refs['schedule-widget']) {\n          this.$refs['schedule-widget'].scrollToDate(\n            this.scheduleItems[0].startDate\n          )\n        }\n      }\n    },\n\n    zoomLevel() {\n      if (this.$refs['schedule-widget']) {\n        this.$refs['schedule-widget'].scrollToDate(\n          this.scheduleItems[0].startDate\n        )\n      }\n    }\n  },\n\n  metaInfo() {\n    return {\n      title: `${this.title} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .page {\n    padding-bottom: 1em;\n  }\n\n  .task-list,\n  .table-body {\n    border: 1px solid $dark-grey;\n  }\n\n  .wrapper {\n    background: $dark-grey-2;\n  }\n}\n\n.main-column {\n  display: flex;\n  flex-direction: column;\n  background: var(--background-page);\n  padding-bottom: 1em;\n}\n\nh2.subtitle {\n  border-bottom: 0;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n  font-size: 1.5em;\n}\n\n.page-header {\n  margin-top: calc(50px + 2em);\n  margin-bottom: 0.8em;\n  margin-left: 1em;\n  margin-right: 1em;\n  .entity-title {\n    font-weight: 500;\n  }\n}\n\n.asset-data {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  margin: 0 1em 0 1em;\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.asset-casting,\n.asset-casted-in,\n.concepts {\n  overflow-y: auto;\n}\n\n.thumbnail-picture {\n  margin-bottom: 0.5em;\n}\n\n.sequence-shots {\n  margin-bottom: 3em;\n}\n\n.asset-type,\n.concept-type,\n.shot-sequence {\n  text-transform: uppercase;\n  font-size: 1.2em;\n  color: var(--text);\n  margin-top: 2em;\n  margin-bottom: 0.4em;\n}\n\n.asset-list,\n.shot-list,\n.concept-list {\n  color: var(--text);\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.concept-list {\n  padding-bottom: 1em;\n  gap: 10px;\n}\n\n.asset-link,\n.shot-link {\n  color: inherit;\n  margin-right: 1em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 0.8em;\n}\n\n.asset-link div,\n.shot-link div {\n  max-width: 100px;\n}\n\n.asset-link span,\n.shot-link span {\n  word-wrap: break-word;\n}\n\n.concept-link {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  cursor: pointer;\n}\n\n.field-label {\n  font-weight: bold;\n  width: 120px;\n}\n\n.page-header {\n  align-items: center;\n}\n\n.back-link {\n  padding-top: 3px;\n}\n\n.task-list {\n  flex: unset;\n  margin-bottom: 3em;\n  min-width: 100%;\n  overflow: auto;\n}\n\n.datatable-row {\n  user-select: text;\n}\n\n.schedule {\n  position: relative;\n  height: 100%;\n  overflow: hidden;\n\n  .timelien-wrapper,\n  .timeline {\n    height: 100%;\n  }\n\n  .schedule-title {\n    margin-bottom: 5px;\n  }\n\n  .wrapper {\n    height: 100%;\n    border-radius: 10px;\n  }\n}\n\n.section-combo {\n  width: 150px;\n\n  .option-line {\n    width: 150px;\n  }\n}\n\n.entity-thumbnail {\n  margin-bottom: 0;\n  border-radius: 10px;\n}\n\n@media screen and (max-width: 768px) {\n  .task-column {\n    margin-bottom: 1em;\n  }\n\n  .column:first-child {\n    margin-right: 0;\n  }\n\n  .entity-title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n}\n\n.tag-standby {\n  background: $red;\n  color: $white;\n  cursor: default;\n  text-transform: uppercase;\n}\n\n.dark .tag-standby {\n  background: $dark-red;\n}\n\n.section-tabs {\n  min-height: 36px;\n  margin-bottom: 0;\n}\n\n.flexcolumn {\n  flex-direction: column;\n  overflow-y: auto;\n}\n\n.infos {\n  margin-top: 1em;\n  margin-bottom: 1em;\n  max-height: 100%;\n  overflow-y: auto;\n\n  .entity-infos {\n    align-self: flex-start;\n    flex: 1.5;\n  }\n}\n\n.entity-stats {\n  padding: 1em;\n  font-size: 1.2em;\n\n  .entry-label {\n    display: inline-block;\n    width: 120px;\n  }\n}\n\n.news-column {\n  max-height: 85%;\n}\n</style>\n"],"names":["_sfc_main","Spinner","TaskTypeCell","mapGetters","mapActions","outputFile","outputFileId","renderFileSize","entityMixin","formatListMixin","ButtonSimple","ConceptCard","ComboboxNumber","CornerLeftUpIcon","ComboboxStatus","DescriptionCell","EditAssetModal","EntityNews","EntityOutputFiles","EntityPreviewFiles","EntityThumbnail","EntityTaskList","EntityTimeLogs","PageSubtitle","RouteSectionTabs","Schedule","TableInfo","TaskInfo","TaskTypeName","_a","acc","shots","assets","currentIndex","asset","index","route","option","allStatusItem","conceptTaskStatusList","sortByName","status","concept","task","tab","resolve","reject","assetId","taskId","form","err","shot"],"mappings":"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"}