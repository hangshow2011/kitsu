{"version":3,"file":"Sequence-BNyp4BMy.js","sources":["../../src/components/pages/Sequence.vue"],"sourcesContent":["<template>\n  <div class=\"columns fixed-page sequence xyz-in\" xyz=\"fade\">\n    <div class=\"column main-column\">\n      <div class=\"page-header flexrow\">\n        <router-link\n          class=\"flexrow-item has-text-centered back-link\"\n          :to=\"getSequencesRoute\"\n        >\n          <corner-left-up-icon />\n        </router-link>\n        <span class=\"flexrow-item ml2\">\n          <entity-thumbnail\n            class=\"entity-thumbnail\"\n            :entity=\"currentSequence\"\n            :empty-width=\"120\"\n            :empty-height=\"50\"\n            :width=\"120\"\n            v-if=\"currentSequence\"\n          />\n        </span>\n        <div class=\"flexrow-item\">\n          <page-title :text=\"title\" class=\"entity-title\" />\n        </div>\n      </div>\n\n      <div class=\"flexrow infos\">\n        <div class=\"flexrow-item block flexcolumn\">\n          <page-subtitle :text=\"$t('sequences.tasks')\" />\n          <entity-task-list\n            class=\"task-list\"\n            :entries=\"currentTasks\"\n            :is-loading=\"!currentSequence\"\n            :is-error=\"false\"\n            @task-selected=\"onTaskSelected\"\n          />\n        </div>\n        <div class=\"flexrow-item block flexcolumn\">\n          <div class=\"flexrow\">\n            <page-subtitle :text=\"$t('main.info')\" />\n            <div class=\"filler\"></div>\n            <div class=\"flexrow-item has-text-right\">\n              <button-simple\n                icon=\"edit\"\n                @click=\"modals.edit = true\"\n                v-if=\"isCurrentUserManager\"\n              />\n            </div>\n          </div>\n          <div class=\"table-body\">\n            <table class=\"datatable no-header\" v-if=\"currentSequence\">\n              <tbody class=\"datatable-body\">\n                <tr class=\"datatable-row\">\n                  <td class=\"field-label\">\n                    {{ $t('shots.fields.description') }}\n                  </td>\n                  <description-cell :entry=\"currentSequence\" :full=\"true\" />\n                </tr>\n\n                <tr\n                  :key=\"descriptor.id\"\n                  class=\"datatable-row\"\n                  v-for=\"descriptor in sequenceMetadataDescriptors\"\n                >\n                  <td class=\"field-label\">{{ descriptor.name }}</td>\n                  <td>\n                    {{\n                      currentSequence && currentSequence.data\n                        ? currentSequence.data[descriptor.field_name]\n                        : ''\n                    }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"sequence-data block\">\n        <div class=\"flexrow\">\n          <combobox-styled\n            class=\"section-combo flexrow-item\"\n            :options=\"entityNavOptions\"\n            v-model=\"currentSection\"\n          />\n          <span v-show=\"currentSection === 'casting'\">\n            {{ nbAssets }} {{ $tc('assets.number', nbAssets) }}\n          </span>\n          <span\n            class=\"tag tag-standby\"\n            v-show=\"\n              currentSection === 'casting' &&\n              currentSequence &&\n              currentSequence.is_casting_standby\n            \"\n          >\n            {{ $t('breakdown.fields.standby') }}\n          </span>\n          <div class=\"filler\"></div>\n          <span\n            class=\"flexrow-item mt05\"\n            v-show=\"currentSection === 'schedule'\"\n          >\n            {{ $t('schedule.zoom_level') }}:\n          </span>\n          <combobox-number\n            class=\"zoom-level flexrow-item\"\n            :options=\"zoomOptions\"\n            is-simple\n            v-model=\"zoomLevel\"\n            v-show=\"currentSection === 'schedule'\"\n          />\n        </div>\n\n        <div class=\"sequence-casting\" v-show=\"currentSection === 'casting'\">\n          <div v-if=\"currentSequence\">\n            <div\n              v-if=\"\n                currentSequence &&\n                currentSequence.castingAssetsByType &&\n                currentSequence.castingAssetsByType[0].length > 0\n              \"\n            >\n              <div\n                class=\"type-assets\"\n                :key=\"\n                  typeAssets.length > 0 ? typeAssets[0].asset_type_name : ''\n                \"\n                v-for=\"typeAssets in currentSequence.castingAssetsByType\"\n              >\n                <div class=\"asset-type\">\n                  {{\n                    typeAssets.length > 0 ? typeAssets[0].asset_type_name : ''\n                  }}\n                  ({{ typeAssets.length }})\n                </div>\n                <div class=\"asset-list\">\n                  <router-link\n                    class=\"asset-link\"\n                    :key=\"asset.id\"\n                    :to=\"buildAssetRoute(asset)\"\n                    v-for=\"asset in typeAssets\"\n                  >\n                    <entity-thumbnail\n                      class=\"entity-thumbnail\"\n                      :entity=\"asset\"\n                      :square=\"true\"\n                      :empty-width=\"103\"\n                      :empty-height=\"103\"\n                      :with-link=\"false\"\n                    />\n                    <div class=\"break-word\">\n                      {{ asset.asset_name }}\n                      <span v-if=\"asset.nb_occurences > 1\">\n                        ({{ asset.nb_occurences }})\n                      </span>\n                    </div>\n                    <div class=\"ready-for flexrow\">\n                      <task-type-name\n                        class=\"flexrow-item\"\n                        :task-type=\"taskTypeMap.get(asset.ready_for)\"\n                        :current-production-id=\"currentProduction.id\"\n                        :title=\"\n                          'Ready for: ' + taskTypeMap.get(asset.ready_for).name\n                        \"\n                        v-if=\"asset.ready_for\"\n                      />\n                    </div>\n                  </router-link>\n                </div>\n              </div>\n            </div>\n            <div class=\"mt1\" v-else>\n              {{ $t('sequences.no_casting') }}\n            </div>\n          </div>\n          <table-info\n            :is-loading=\"casting.isLoading\"\n            :is-error=\"casting.isError\"\n            v-else\n          />\n        </div>\n\n        <div\n          class=\"schedule mt1\"\n          v-if=\"scheduleItems[0].children.length > 0\"\n          v-show=\"currentSection === 'schedule'\"\n        >\n          <div class=\"wrapper\">\n            <schedule\n              ref=\"schedule-widget\"\n              :start-date=\"tasksStartDate\"\n              :end-date=\"tasksEndDate\"\n              :hierarchy=\"scheduleItems\"\n              :zoom-level=\"zoomLevel\"\n              :is-loading=\"false\"\n              :is-estimation-linked=\"true\"\n              :hide-root=\"true\"\n              :with-milestones=\"false\"\n            />\n          </div>\n        </div>\n        <div class=\"mt1\" v-else v-show=\"currentSection === 'schedule'\">\n          {{ $t('main.empty_schedule') }}\n        </div>\n\n        <entity-preview-files\n          :entity=\"currentSequence\"\n          v-if=\"currentSequence && currentSection === 'preview-files'\"\n        />\n\n        <entity-news\n          :entity=\"currentSequence\"\n          v-if=\"currentSequence && currentSection === 'activity'\"\n        />\n\n        <entity-time-logs\n          :entity=\"currentSequence\"\n          v-if=\"currentSequence && currentSection === 'time-logs'\"\n        />\n      </div>\n    </div>\n\n    <div class=\"column side-column\" v-if=\"currentTask\">\n      <task-info :task=\"currentTask\" entity-type=\"Sequence\" with-actions />\n    </div>\n\n    <edit-sequence-modal\n      ref=\"edit-sequence-modal\"\n      :active=\"modals.edit\"\n      :is-loading=\"loading.edit\"\n      :is-error=\"errors.edit\"\n      :sequence-to-edit=\"currentSequence\"\n      @cancel=\"modals.edit = false\"\n      @confirm=\"confirmEditSequence\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { CornerLeftUpIcon } from 'vue-feather-icons'\n\nimport { episodifyRoute, getEntitiesPath } from '@/lib/path'\nimport { entityMixin } from '@/components/mixins/entity'\nimport { formatListMixin } from '@/components/mixins/format'\n\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport ComboboxNumber from '@/components/widgets/ComboboxNumber'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled'\nimport DescriptionCell from '@/components/cells/DescriptionCell'\nimport EditSequenceModal from '@/components/modals/EditSequenceModal'\nimport EntityNews from '@/components/pages/entities/EntityNews'\nimport EntityPreviewFiles from '@/components/pages/entities/EntityPreviewFiles'\nimport EntityTaskList from '@/components/lists/EntityTaskList'\nimport EntityTimeLogs from '@/components/pages/entities/EntityTimeLogs'\nimport EntityThumbnail from '@/components/widgets/EntityThumbnail'\nimport PageTitle from '@/components/widgets/PageTitle'\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\nimport Schedule from '@/components/pages/schedule/Schedule'\nimport TableInfo from '@/components/widgets/TableInfo'\nimport TaskInfo from '@/components/sides/TaskInfo'\nimport TaskTypeName from '@/components/widgets/TaskTypeName'\n\nexport default {\n  name: 'sequence',\n  mixins: [entityMixin, formatListMixin],\n  components: {\n    ButtonSimple,\n    ComboboxNumber,\n    ComboboxStyled,\n    CornerLeftUpIcon,\n    DescriptionCell,\n    EditSequenceModal,\n    EntityNews,\n    EntityPreviewFiles,\n    EntityTaskList,\n    EntityTimeLogs,\n    EntityThumbnail,\n    PageSubtitle,\n    PageTitle,\n    Schedule,\n    TableInfo,\n    TaskInfo,\n    TaskTypeName\n  },\n\n  data() {\n    return {\n      type: 'sequence',\n      currentSequence: null,\n      currentTask: null,\n      casting: {\n        isLoading: false,\n        isError: false\n      },\n      errors: {\n        edit: false\n      },\n      loading: {\n        edit: false\n      },\n      modals: {\n        edit: false,\n        preview: false\n      }\n    }\n  },\n\n  mounted() {\n    this.clearSelectedTasks()\n    this.loadCurrentSequence()\n      .then(sequence => {\n        this.currentSequence = sequence\n        this.currentSection = this.route.query.section || 'casting'\n        this.casting.isLoading = true\n        this.casting.isError = false\n        if (this.currentSequence) {\n          this.loadSequenceCasting(this.currentSequence)\n            .then(() => {\n              this.casting.isLoading = false\n            })\n            .catch(err => {\n              this.casting.isLoading = false\n              this.casting.isError = true\n              console.error(err)\n            })\n        } else {\n          this.resetData()\n        }\n      })\n      .catch(console.error)\n  },\n\n  computed: {\n    ...mapGetters([\n      'currentEpisode',\n      'currentProduction',\n      'getTaskTypePriority',\n      'isCurrentUserManager',\n      'isTVShow',\n      'sequenceMap',\n      'sequenceMetadataDescriptors',\n      'sequenceSearchText',\n      'route',\n      'taskMap',\n      'taskTypeMap'\n    ]),\n\n    title() {\n      if (this.currentSequence) {\n        if (this.currentEpisode) {\n          return `${this.currentEpisode.name} / ${this.currentSequence.name}`\n        } else {\n          return `${this.currentSequence.name}`\n        }\n      } else {\n        return 'Loading...'\n      }\n    },\n\n    currentEntity() {\n      return this.currentSequence\n    },\n\n    getSequencesRoute() {\n      const productionId = this.currentProduction.id\n      const episodeId = this.currentEpisode?.id\n      const route = getEntitiesPath(productionId, 'sequences', episodeId)\n      route.query = { search: this.sequenceSearchText }\n      return route\n    },\n\n    nbAssets() {\n      let nbAssets = 0\n      if (\n        this.currentSequence &&\n        this.currentSection === 'casting' &&\n        this.currentSequence.castingAssetsByType\n      ) {\n        this.currentSequence.castingAssetsByType.forEach(group => {\n          nbAssets += group.length\n        })\n      }\n      return nbAssets\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'clearSelectedTasks',\n      'editSequence',\n      'setCurrentSequence',\n      'loadEpisodes',\n      'loadSequencesWithTasks',\n      'loadSequenceCasting'\n    ]),\n\n    loadCurrentSequence() {\n      return new Promise((resolve, reject) => {\n        const sequenceId = this.route.params.sequence_id\n        const sequence = this.sequenceMap.get(sequenceId) || null\n        if (!sequence || !sequence.validations) {\n          return this.loadEpisodes()\n            .then(() => {\n              return this.loadSequencesWithTasks()\n            })\n            .then(() => {\n              const sequence = this.sequenceMap.get(sequenceId) || null\n              return resolve(sequence)\n            })\n        } else {\n          return resolve(sequence)\n        }\n      })\n    },\n\n    confirmEditSequence(form) {\n      form.id = this.currentSequence.id\n      this.loading.edit = true\n      this.errors.edit = false\n      this.editSequence(form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.edit = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.edit = false\n          this.errors.edit = true\n        })\n    },\n\n    buildAssetRoute(asset) {\n      const episodeId = this.isTVShow ? this.currentEpisode?.id || 'main' : null\n      const route = {\n        name: 'asset',\n        params: {\n          production_id: this.currentProduction.id,\n          asset_id: asset.asset_id\n        }\n      }\n      return episodifyRoute(route, episodeId)\n    },\n\n    resetData() {\n      this.casting.isLoading = true\n      // Next tick is needed to wait for the sequence change.\n      this.$nextTick(() => {\n        this.loadCurrentSequence()\n          .then(sequence => {\n            this.currentSequence = sequence\n            return this.loadSequenceCasting(this.currentSequence)\n          })\n          .then(() => {\n            this.casting.isLoading = false\n          })\n          .catch(err => {\n            this.casting.isError = true\n            this.casting.isLoading = false\n            console.error(err)\n          })\n      })\n    }\n  },\n\n  watch: {},\n\n  metaInfo() {\n    return {\n      title: `${this.title} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dark {\n  .page {\n    background: $dark-grey-light;\n    height: 100%;\n    padding-bottom: 1em;\n  }\n\n  .wrapper {\n    background: $dark-grey-2;\n  }\n\n  .tag-standby {\n    background: $dark-red;\n  }\n}\n\n.main-column {\n  display: flex;\n  flex-direction: column;\n  background: var(--background-page);\n  padding-bottom: 1em;\n}\n\nh2.subtitle {\n  margin-top: 0;\n  margin-bottom: 0.5em;\n  font-size: 1.5em;\n}\n\n.page-header {\n  margin-top: calc(50px + 2em);\n  margin-bottom: 0.8em;\n  margin-left: 2em;\n  margin-right: 1em;\n\n  .entity-title {\n    font-weight: 500;\n  }\n}\n\n.infos {\n  height: 350px;\n  margin-bottom: 1em;\n  margin-left: 1em;\n  margin-right: 1em;\n\n  .flexrow-item {\n    align-self: flex-start;\n    height: 100%;\n    flex: 1;\n  }\n}\n\n.sequence-data {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  margin: 0 1em 0 1em;\n  max-height: 100%;\n  overflow: hidden;\n}\n\n.sequence-casting {\n  overflow-y: auto;\n}\n\n.asset-link .thumbnail-picture {\n  margin-bottom: 0.5em;\n}\n\n.asset-type {\n  text-transform: uppercase;\n  font-size: 1.2em;\n  color: var(--text);\n  margin-top: 2em;\n  margin-bottom: 0.4em;\n}\n\n.asset-list {\n  color: var(--text);\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.asset-link {\n  color: inherit;\n  margin-right: 1em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 0.8em;\n\n  .ready-for .no-link {\n    cursor: inherit;\n  }\n}\n\n.asset-link div {\n  max-width: 100px;\n}\n\n.asset-link span {\n  word-wrap: break-word;\n}\n\n.field-label {\n  font-weight: bold;\n  width: 140px;\n}\n\n.page-header {\n  align-items: center;\n}\n\n.data-list {\n  max-width: 100%;\n}\n\n.back-link {\n  padding-top: 3px;\n}\n\n.task-list {\n  width: 100%;\n}\n\n.datatable-row {\n  user-select: text;\n}\n\n.schedule {\n  position: relative;\n  height: 100%;\n\n  .timelien-wrapper,\n  .timeline {\n    height: 100%;\n  }\n\n  .schedule-title {\n    margin-bottom: 5px;\n  }\n\n  .wrapper {\n    height: 100%;\n    border-radius: 10px;\n  }\n}\n\n.section-combo {\n  width: 150px;\n\n  .option-line {\n    width: 150px;\n  }\n}\n\n@media screen and (max-width: 768px) {\n  .task-column {\n    margin-bottom: 1em;\n  }\n\n  .column:first-child {\n    margin-right: 0;\n  }\n\n  .entity-title {\n    font-size: 1.3em;\n    line-height: 1.5em;\n  }\n}\n\n.tag-standby {\n  background: $red;\n  color: $white;\n  margin-left: 1em;\n  cursor: default;\n  text-transform: uppercase;\n}\n</style>\n"],"names":["_sfc_main","entityMixin","formatListMixin","ButtonSimple","ComboboxNumber","ComboboxStyled","CornerLeftUpIcon","DescriptionCell","EditSequenceModal","EntityNews","EntityPreviewFiles","EntityTaskList","EntityTimeLogs","EntityThumbnail","PageSubtitle","PageTitle","Schedule","TableInfo","TaskInfo","TaskTypeName","sequence","err","mapGetters","productionId","episodeId","_a","route","getEntitiesPath","nbAssets","group","mapActions","resolve","reject","sequenceId","form","asset","episodifyRoute"],"mappings":"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"}