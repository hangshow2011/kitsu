import{z as r,$ as n,a0 as l,B as c,o as d,c as p,a1 as h,K as u,a2 as f,g as C,h as m,a3 as g,m as v,a4 as y,a5 as S,s as _,a as b,n as k}from"./index-Djh35xFL.js";import{C as T}from"./ConceptCard-_kLbanvH.js";const x={name:"concepts",mixins:[r,n],components:{AddPreviewModal:l,ButtonSimple:c,Combobox:d,ComboboxStatus:p,ConceptCard:T,PeopleField:h,SearchField:u,SearchQueryList:f,TableInfo:C,TaskInfo:m},data(){return{imgExtensions:g.IMG_EXTENSIONS_STRING,isDraggingFile:!1,loading:{addingConcept:!1,loadingConcepts:!1,savingSearch:!1},errors:{addingConcept:!1,loadingConcepts:!1},filters:{entityType:null,publisher:null,sortBy:"created_at",taskStatusId:null},form:{file:null},modals:{addConcept:!1},conceptSearchQueries:[{id:"filter-test-1",list_type:"concept",name:"test",search_query:"test"}]}},mounted(){},computed:{...v(["assetMap","currentProduction","displayedConcepts","isDarkTheme","isTVShow","personMap","selectedConcepts","taskStatusMap"]),publishers(){const t=new Map;return this.filteredConcepts.forEach(e=>{const s=e.created_by;if(!t.has(s)){const i=this.personMap.get(s);i&&t.set(s,i)}}),y([...t.values()])},currentTask(){var t,e;return(e=(t=this.currentConcept)==null?void 0:t.tasks)==null?void 0:e[0]},currentConcept(){return this.selectedConcepts.size===1?this.selectedConcepts.values().next().value:null},entityTypeOptions(){const t={label:this.$t("main.all"),value:null},e=["assets","shots","sequences","edits","episodes"].map(s=>({label:this.$t(`${s}.title`),value:s}));return[t].concat(e)},sortByOptions(){return["created_at","updated_at","last_comment_date"].map(t=>({label:t,value:t}))},filteredConcepts(){let t=[...this.displayedConcepts];return this.filters.taskStatusId&&(t=t.filter(e=>e.tasks[0].task_status_id===this.filters.taskStatusId)),this.filters.publisher&&(t=t.filter(e=>e.created_by===this.filters.publisher.id)),this.filters.entityType&&(t=t.filter(e=>{var s;return(s=e.tags)==null?void 0:s.some(i=>i.type===this.filters.entityType)})),t.sort(S.firstBy(this.filters.sortBy,-1).thenBy("created_at",-1))},searchField(){return this.$refs["search-field"]},taskStatusList(){const t={id:null,color:"#999",name:this.$t("main.all"),short_name:this.$t("main.all")},e=_(Array.from(this.taskStatusMap.values()).filter(s=>s.for_concept));return[t].concat(e)}},methods:{...b(["addSelectedConcepts","addSelectedTask","clearSelectedConcepts","clearSelectedTasks","loadAssets","loadConcepts","newConcepts","setCurrentEpisode"]),setConceptSearch:t=>Promise.resolve(),saveConceptSearch:t=>Promise.resolve(),removeConceptSearch:t=>Promise.resolve(),setSearch(t){this.searchField.setValue(t)},onSearchChange(){const t=this.searchField.getValue()||"";(t==null?void 0:t.length)!==1&&this.setConceptSearch(t),this.setSearchInUrl()},saveSearchQuery(t){this.loading.savingSearch||(this.loading.savingSearch=!0,this.saveConceptSearch(t).catch(console.error).finally(()=>{this.loading.savingSearch=!1}))},removeSearchQuery(t){this.removeConceptSearch(t).catch(e=>{e&&console.error(e)})},async refreshConcepts(){this.loading.loadingConcepts=!0;try{this.setCurrentEpisode("all"),await this.loadAssets(!0),await this.loadConcepts()}catch(t){console.error(t),this.errors.loadingConcepts=!0}finally{this.loading.loadingConcepts=!1}},isSelected(t){return this.selectedConcepts.has(t.id)},onSelectConcept(t,e=!1){const s=e?new Map(this.selectedConcepts):new Map;e&&this.isSelected(t)||!e&&t===this.currentConcept?s.delete(t.id):s.set(t.id,t),this.clearSelectedConcepts(),this.addSelectedConcepts(s),this.clearSelectedTasks(),this.currentTask&&this.addSelectedTask(this.currentTask)},openAddConceptModal(){this.modals.addConcept=!0},closeAddConceptModal(){this.modals.addConcept=!1},async confirmAddConceptModal(t){this.loading.addingConcept=!0;try{await this.newConcepts(t),this.closeAddConceptModal()}catch(e){console.error(e),this.errors.addingConcept=!0}finally{this.loading.addingConcept=!1}},reset(){this.clearSelectedConcepts(),this.clearSelectedTasks(),this.refreshConcepts()},onFileDrop(t){this.pauseEvent(t);const e=t.dataTransfer.files;this.modals.addConcept=!0,this.isDraggingFile=!1,this.$nextTick(()=>{this.$refs["add-preview-modal"].setFiles(e)})},onFileDragover(t){this.pauseEvent(t),this.isDraggingFile=!0},onFileDragLeave(){this.isDraggingFile=!1}},watch:{currentProduction:{immediate:!0,handler(){var e;const t=this.$route.params.production_id;((e=this.currentProduction)==null?void 0:e.id)===t&&this.reset()}}},metaInfo(){return{title:`${this.$t("concepts.title")} - Kitsu`}}};var F=function(){var i;var e=this,s=e._self._c;return s("div",{staticClass:"fixed-page columns"},[s("div",{staticClass:"column main-column"},[s("div",{staticClass:"concepts page"},[s("div",{staticClass:"page-header"},[s("div",{staticClass:"filters"},[e._e(),s("combobox-status",{attrs:{label:e.$t("main.status"),"task-status-list":e.taskStatusList},model:{value:e.filters.taskStatusId,callback:function(a){e.$set(e.filters,"taskStatusId",a)},expression:"filters.taskStatusId"}}),s("span",{staticClass:"field small"},[s("label",{staticClass:"label"},[e._v(" "+e._s(e.$t("concepts.fields.publisher"))+" ")]),s("people-field",{attrs:{big:!0,people:e.publishers},model:{value:e.filters.publisher,callback:function(a){e.$set(e.filters,"publisher",a)},expression:"filters.publisher"}})],1),e._e(),s("combobox",{staticClass:"right",attrs:{label:e.$t("main.sorted_by"),"locale-key-prefix":"concepts.fields.",options:e.sortByOptions},model:{value:e.filters.sortBy,callback:function(a){e.$set(e.filters,"sortBy",a)},expression:"filters.sortBy"}})],1),e._e()]),e.loading.loadingConcepts||e.errors.loadingConcepts?s("table-info",{attrs:{"is-loading":e.loading.loadingConcepts,"is-error":e.errors.loadingConcepts}}):(i=e.filteredConcepts)!=null&&i.length?s("div",{ref:"concept-list",staticClass:"concept-list pb1",on:{dragover:e.onFileDragover}},[e.isDraggingFile?s("div",{staticClass:"drop-mask",on:{drop:e.onFileDrop,dragover:e.onFileDragover,dragleave:e.onFileDragLeave}},[e._v(" Drop new concepts ")]):e._e(),s("ul",{staticClass:"items"},e._l(e.filteredConcepts,function(a){return s("li",{key:a.id,staticClass:"item",class:{"selected-item":e.isSelected(a)},on:{click:function(o){return e.onSelectConcept(a,o.ctrlKey||o.metaKey)}}},[s("concept-card",{attrs:{concept:a}})],1)}),0)]):s("div",{staticClass:"has-text-centered mb1 mt1 empty-concepts"},[s("strong",[e._v(" "+e._s(e.$t("concepts.empty"))+" ")])]),s("div",{staticClass:"footer mb2"},[s("button-simple",{staticClass:"upload-button",attrs:{disabled:e.loading.loadingConcepts,text:e.$t("concepts.add_new_concept")},on:{click:e.openAddConceptModal}})],1)],1)]),s("add-preview-modal",{ref:"add-preview-modal",attrs:{active:e.modals.addConcept,extensions:e.imgExtensions,"is-concept":"","is-error":e.errors.addingConcept,"is-loading":e.loading.addingConcept,message:""},on:{cancel:e.closeAddConceptModal,confirm:e.confirmAddConceptModal}}),s("div",{staticClass:"column side-column"},[s("task-info",{attrs:{"entity-type":"Concept",task:e.currentTask,"with-actions":""}})],1)],1)},$=[],w=k(x,F,$,!1,null,"5b438023",null,null);const D=w.exports;export{D as default};
//# sourceMappingURL=Concepts-CPPyXfS9.js.map
