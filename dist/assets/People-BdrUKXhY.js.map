{"version":3,"file":"People-BdrUKXhY.js","sources":["../../src/components/modals/ChangePasswordModal.vue","../../src/components/pages/People.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"{\n      modal: true,\n      'is-active': active\n    }\"\n  >\n    <div class=\"modal-background\" @click=\"$emit('cancel')\"></div>\n\n    <div class=\"modal-content\">\n      <div class=\"box\">\n        <h1 class=\"title\">\n          {{ $t('people.change_password_for') }} {{ person.name }}\n        </h1>\n\n        <form v-on:submit.prevent>\n          <text-field\n            :disabled=\"person.is_generated_from_ldap\"\n            :label=\"$t('people.fields.password')\"\n            ref=\"first-password\"\n            type=\"password\"\n            @enter=\"confirmClicked()\"\n            v-model=\"form.password\"\n          />\n          <text-field\n            :disabled=\"person.is_generated_from_ldap\"\n            :label=\"$t('people.fields.password_2')\"\n            type=\"password\"\n            @enter=\"confirmClicked()\"\n            v-model=\"form.password2\"\n          />\n        </form>\n\n        <div class=\"flexrow\">\n          <button\n            :class=\"{\n              button: true,\n              'is-primary': true,\n              'flexrow-item': true,\n              'is-loading': isLoading\n            }\"\n            :disabled=\"person.is_generated_from_ldap\"\n            @click=\"confirmClicked\"\n          >\n            {{ $t('profile.change_password.button') }}\n          </button>\n          <button\n            :class=\"{\n              button: true,\n              'flexrow-item': true,\n              'is-loading': isLoading,\n              'is-warning': true\n            }\"\n            :disabled=\"!(person.totp_enabled || person.email_otp_enabled)\"\n            @click=\"disableTwoFactorAuthenticationClicked\"\n          >\n            {{ $t('people.disable_2FA') }}\n          </button>\n          <div class=\"filler\"></div>\n\n          <button class=\"button is-link flexrow-item\" @click=\"$emit('cancel')\">\n            {{ $t('main.cancel') }}\n          </button>\n        </div>\n\n        <div class=\"error has-text-right mt1\" v-if=\"!isValid\">\n          {{ $t('profile.change_password.unvalid') }}\n        </div>\n        <div class=\"error has-text-right mt1\" v-if=\"isError\">\n          {{ $t('people.change_password_error') }}\n        </div>\n        <div\n          class=\"error has-text-right mt1\"\n          v-if=\"isErrorDisableTwoFactorAuthentication\"\n        >\n          {{ $t('people.disable_2FA_error') }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { modalMixin } from '@/components/modals/base_modal'\n\nimport TextField from '@/components/widgets/TextField'\n\nexport default {\n  name: 'change-password-modal',\n  mixins: [modalMixin],\n  props: {\n    active: {\n      type: Boolean,\n      default: false\n    },\n    person: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  data() {\n    return {\n      form: {\n        password: '',\n        password2: ''\n      },\n      isLoading: false,\n      isError: false,\n      isErrorDisableTwoFactorAuthentication: false,\n      isValid: true\n    }\n  },\n\n  components: {\n    TextField\n  },\n\n  computed: {\n    ...mapGetters([])\n  },\n\n  methods: {\n    ...mapActions([\n      'changePasswordPerson',\n      'disableTwoFactorAuthenticationPerson'\n    ]),\n\n    confirmClicked() {\n      this.isErrorDisableTwoFactorAuthentication = false\n      this.isError = false\n      this.isLoading = true\n      this.changePasswordPerson({\n        person: this.person,\n        form: this.form\n      })\n        .then(() => {\n          this.$emit('confirm')\n        })\n        .catch(err => {\n          if (err.isValidPassword === false) this.isValid = false\n          else this.isError = true\n        })\n        .finally(() => {\n          this.isLoading = false\n        })\n    },\n\n    disableTwoFactorAuthenticationClicked() {\n      this.isErrorDisableTwoFactorAuthentication = false\n      this.isError = false\n      this.isLoading = true\n      this.disableTwoFactorAuthenticationPerson(this.person)\n        .catch(() => {\n          this.isErrorDisableTwoFactorAuthentication = true\n        })\n        .finally(() => {\n          this.isLoading = false\n        })\n    },\n\n    resetForm() {\n      if (this.person) {\n        this.form = {\n          password: '',\n          password2: ''\n        }\n        this.isLoading = false\n        this.isError = false\n        this.isErrorDisableTwoFactorAuthentication = false\n        this.isValid = true\n      }\n    }\n  },\n\n  watch: {\n    person() {\n      this.resetForm()\n    },\n\n    active() {\n      if (this.active) {\n        this.resetForm()\n        setTimeout(() => {\n          this.$refs['first-password'].focus()\n        }, 100)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.modal-content .box p.text {\n  margin-bottom: 1em;\n}\n.is-danger {\n  color: #ff3860;\n  font-style: italic;\n}\n</style>\n","<template>\n  <div class=\"people page fixed-page\">\n    <div class=\"flexrow page-header\">\n      <page-title class=\"flexrow-item filler\" :text=\"$t('people.title')\" />\n\n      <button-simple\n        class=\"flexrow-item\"\n        :title=\"$t('main.csv.import_file')\"\n        :is-responsive=\"true\"\n        icon=\"import\"\n        @click=\"showImportModal\"\n        v-if=\"isCurrentUserAdmin\"\n      />\n      <button-href-link\n        class=\"flexrow-item\"\n        :title=\"$t('main.csv.export_file')\"\n        icon=\"export\"\n        path=\"/api/export/csv/persons.csv\"\n      />\n      <button-simple\n        class=\"flexrow-item\"\n        :text=\"$t('people.new_person')\"\n        :is-responsive=\"true\"\n        icon=\"plus\"\n        @click=\"onNewClicked\"\n        v-if=\"isCurrentUserAdmin\"\n      />\n    </div>\n\n    <div class=\"flexrow search-options\">\n      <search-field\n        ref=\"people-search-field\"\n        class=\"search flexrow-item\"\n        :can-save=\"true\"\n        @change=\"onSearchChange\"\n        @save=\"saveSearchQuery\"\n        placeholder=\"ex: John Doe\"\n      />\n      <combobox-department\n        class=\"combobox-department flexrow-item\"\n        :label=\"$t('main.department')\"\n        v-model=\"selectedDepartment\"\n      />\n      <combobox-styled\n        class=\"flexrow-item\"\n        :label=\"$t('people.fields.role')\"\n        :options=\"roleOptions\"\n        locale-key-prefix=\"people.role.\"\n        no-margin\n        v-model=\"role\"\n      />\n    </div>\n\n    <div class=\"query-list\">\n      <search-query-list\n        :queries=\"peopleSearchQueries\"\n        type=\"people\"\n        @change-search=\"changeSearch\"\n        @remove-search=\"removeSearchQuery\"\n        v-if=\"!isPeopleLoading\"\n      />\n    </div>\n\n    <people-list\n      :entries=\"currentPeople\"\n      :is-loading=\"isPeopleLoading\"\n      :is-error=\"isPeopleLoadingError\"\n      @avatar-clicked=\"onAvatarClicked\"\n      @delete-clicked=\"onDeleteClicked\"\n      @edit-clicked=\"onEditClicked\"\n      @change-password-clicked=\"onChangePasswordClicked\"\n    />\n\n    <import-render-modal\n      :active=\"modals.isImportRenderDisplayed\"\n      :is-loading=\"isImportPeopleLoading\"\n      :is-error=\"isImportPeopleLoadingError\"\n      :parsed-csv=\"parsedCSV\"\n      :form-data=\"personCsvFormData\"\n      :columns=\"[...dataMatchers, ...csvColumns, ...optionalCsvColumns]\"\n      :dataMatchers=\"dataMatchers\"\n      :database=\"filteredPeople\"\n      @reupload=\"resetImport\"\n      @cancel=\"hideImportRenderModal\"\n      @confirm=\"uploadImportFile\"\n    />\n\n    <import-modal\n      ref=\"import-modal\"\n      :active=\"modals.importModal\"\n      :is-loading=\"isImportPeopleLoading\"\n      :is-error=\"isImportPeopleLoadingError\"\n      :form-data=\"personCsvFormData\"\n      :columns=\"[...dataMatchers, ...csvColumns]\"\n      :optional-columns=\"optionalCsvColumns\"\n      @cancel=\"hideImportModal\"\n      @confirm=\"renderImport\"\n    />\n\n    <edit-avatar-modal\n      :active=\"modals.avatar\"\n      :error-text=\"$t('people.edit_avatar_error')\"\n      :is-deleting=\"loading.deletingAvatar\"\n      :is-error=\"errors.avatar\"\n      :is-updating=\"loading.updatingAvatar\"\n      :person=\"personToEdit\"\n      @close=\"modals.avatar = false\"\n      @delete=\"deleteAvatar\"\n      @update=\"updateAvatar\"\n    />\n\n    <edit-person-modal\n      :active=\"modals.edit\"\n      :is-create-invite-loading=\"loading.createAndInvite\"\n      :is-error=\"errors.edit\"\n      :is-invite-loading=\"loading.invite\"\n      :is-invitation-success=\"success.invite\"\n      :is-invitation-error=\"errors.invite\"\n      :is-loading=\"loading.edit\"\n      :is-user-limit-error=\"errors.userLimit\"\n      :person-to-edit=\"personToEdit\"\n      @cancel=\"modals.edit = false\"\n      @confirm=\"confirmEditPeople\"\n      @confirm-invite=\"confirmCreateAndInvite\"\n      @invite=\"confirmInvite\"\n    />\n\n    <change-password-modal\n      :active=\"modals.changePassword\"\n      :person=\"personToChangePassword\"\n      @cancel=\"modals.changePassword = false\"\n      @confirm=\"modals.changePassword = false\"\n    />\n\n    <hard-delete-modal\n      :active=\"modals.del\"\n      :error-text=\"$t('people.delete_error')\"\n      :is-loading=\"loading.del\"\n      :is-error=\"errors.del\"\n      :lock-text=\"personToDelete ? personToDelete.full_name : ''\"\n      :text=\"deleteText\"\n      @cancel=\"modals.del = false\"\n      @confirm=\"confirmDeletePeople\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nimport csv from '@/lib/csv'\nimport ButtonHrefLink from '@/components/widgets/ButtonHrefLink'\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\nimport ChangePasswordModal from '@/components/modals/ChangePasswordModal'\nimport ComboboxDepartment from '@/components/widgets/ComboboxDepartment'\nimport ComboboxStyled from '@/components/widgets/ComboboxStyled'\nimport EditAvatarModal from '@/components/modals/EditAvatarModal'\nimport EditPersonModal from '@/components/modals/EditPersonModal'\nimport HardDeleteModal from '@/components/modals/HardDeleteModal'\nimport ImportModal from '@/components/modals/ImportModal'\nimport ImportRenderModal from '@/components/modals/ImportRenderModal'\nimport PeopleList from '@/components/lists/PeopleList'\nimport PageTitle from '@/components/widgets/PageTitle'\nimport SearchField from '@/components/widgets/SearchField'\nimport SearchQueryList from '@/components/widgets/SearchQueryList'\nimport { searchMixin } from '@/components/mixins/search'\n\nexport default {\n  name: 'people',\n  mixins: [searchMixin],\n  components: {\n    ButtonHrefLink,\n    ButtonSimple,\n    ChangePasswordModal,\n    ComboboxStyled,\n    ComboboxDepartment,\n    EditAvatarModal,\n    EditPersonModal,\n    HardDeleteModal,\n    ImportModal,\n    ImportRenderModal,\n    PageTitle,\n    PeopleList,\n    SearchField,\n    SearchQueryList\n  },\n\n  data() {\n    return {\n      csvColumns: ['First Name', 'Last Name'],\n      optionalCsvColumns: ['Phone', 'Role', 'Contract Type', 'Active'],\n      dataMatchers: ['Email'],\n      role: 'all',\n      roleOptions: [\n        { label: 'all', value: 'all' },\n        { label: 'admin', value: 'admin' },\n        { label: 'client', value: 'client' },\n        { label: 'manager', value: 'manager' },\n        { label: 'supervisor', value: 'supervisor' },\n        { label: 'user', value: 'user' },\n        { label: 'vendor', value: 'vendor' }\n      ],\n      errors: {\n        avatar: false,\n        del: false,\n        edit: false,\n        invite: false,\n        userLimit: false\n      },\n      loading: {\n        createAndInvite: false,\n        del: false,\n        deletingAvatar: false,\n        edit: false,\n        invite: false,\n        savingSearch: false,\n        updatingAvatar: false\n      },\n      modals: {\n        avatar: false,\n        changePassword: false,\n        del: false,\n        edit: false,\n        importModal: false,\n        isImportRenderDisplayed: false\n      },\n      parsedCSV: [],\n      personToDelete: {},\n      personToEdit: { role: 'user' },\n      personToChangePassword: {},\n      selectedDepartment: '',\n      success: {\n        invite: false\n      }\n    }\n  },\n\n  mounted() {\n    this.role = this.$route.query.role || 'all'\n    this.selectedDepartment = this.$route.query.department || ''\n    this.loadPeople(() => {\n      this.setSearchFromUrl()\n      this.onSearchChange()\n    }) // Needed to show department informations\n  },\n\n  watch: {\n    'modals.edit'() {\n      if (this.modals.edit) {\n        this.loading.createAndInvite = false\n        this.errors.edit = false\n        this.errors.invite = false\n        this.errors.userLimit = false\n        this.loading.edit = false\n        this.loading.invite = false\n        this.success.invite = false\n      }\n    },\n\n    selectedDepartment() {\n      this.updateRoute()\n    },\n\n    role() {\n      this.updateRoute()\n    }\n  },\n\n  computed: {\n    ...mapGetters([\n      'displayedPeople',\n      'isCurrentUserAdmin',\n      'isPeopleLoading',\n      'isPeopleLoadingError',\n      'isImportPeopleLoading',\n      'isImportPeopleLoadingError',\n      'peopleSearchQueries',\n      'personCsvFormData'\n    ]),\n\n    currentPeople() {\n      let people = this.displayedPeople.filter(person => !person.is_bot)\n      if (this.role !== 'all') {\n        people = people.filter(person => person.role === this.role)\n      }\n      if (this.selectedDepartment) {\n        people = people.filter(person =>\n          person.departments.includes(this.selectedDepartment)\n        )\n      }\n      return people\n    },\n\n    deleteText() {\n      const personName = this.personToDelete?.full_name\n      return personName ? this.$t('people.delete_text', { personName }) : ''\n    },\n\n    filteredPeople() {\n      const persons = {}\n      this.displayedPeople.forEach(person => {\n        const personKey = person.email\n        persons[personKey] = true\n      })\n      return persons\n    },\n\n    searchField() {\n      return this.$refs['people-search-field']\n    }\n  },\n\n  methods: {\n    ...mapActions([\n      'clearPersonAvatar',\n      'deletePeople',\n      'editPerson',\n      'invitePerson',\n      'loadDepartments',\n      'loadPeople',\n      'newPerson',\n      'newPersonAndInvite',\n      'removePeopleSearch',\n      'savePeopleSearch',\n      'setPeopleSearch',\n      'uploadPersonAvatar',\n      'uploadPersonFile',\n      'updatePersonToEdit'\n    ]),\n\n    renderImport(data, mode) {\n      this.loading.importing = true\n      this.errors.importing = false\n      this.formData = data\n      if (mode === 'file') {\n        data = data.get('file')\n      }\n      csv.processCSV(data).then(results => {\n        this.parsedCSV = results\n        this.hideImportModal()\n        this.loading.importing = false\n        this.showImportRenderModal()\n      })\n    },\n\n    uploadImportFile(data, toUpdate) {\n      const formData = new FormData()\n      const filename = 'import.csv'\n      const csvContent = csv.turnEntriesToCsvString(data)\n      const file = new File([csvContent], filename, { type: 'text/csv' })\n\n      formData.append('file', file)\n      this.loading.importing = true\n      this.errors.importing = false\n      this.$store.commit('PERSON_CSV_FILE_SELECTED', formData)\n\n      this.uploadPersonFile(toUpdate)\n        .then(() => {\n          this.$store.dispatch('loadPeople')\n          this.hideImportRenderModal()\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.importing = false\n          this.errors.importing = true\n        })\n    },\n\n    resetImport() {\n      this.errors.importing = false\n      this.hideImportRenderModal()\n      this.$store.commit('PERSON_CSV_FILE_SELECTED', null)\n      this.$refs['import-modal'].reset()\n      this.showImportModal()\n    },\n\n    async deleteAvatar() {\n      this.loading.deletingAvatar = true\n      try {\n        await this.clearPersonAvatar(this.personToEdit)\n        this.modals.avatar = false\n      } catch (err) {\n        this.errors.avatar = true\n      }\n      this.loading.deletingAvatar = false\n    },\n\n    async updateAvatar(formData) {\n      this.loading.updatingAvatar = true\n      try {\n        await this.uploadPersonAvatar({ person: this.personToEdit, formData })\n        this.modals.avatar = false\n      } catch (err) {\n        this.errors.avatar = true\n      }\n      this.loading.updatingAvatar = false\n    },\n\n    confirmEditPeople(form) {\n      let action = 'editPerson'\n      if (this.personToEdit.id === undefined) action = 'newPerson'\n      else form.id = this.personToEdit.id\n      this.loading.edit = true\n      this.errors.edit = false\n      this.errors.userLimit = false\n      this[action](form)\n        .then(() => {\n          this.loading.edit = false\n          this.modals.edit = false\n        })\n        .catch(err => {\n          const message = err.body?.message\n          const isUserLimitReached =\n            typeof message === 'string' && message.includes('limit')\n          if (isUserLimitReached) {\n            this.errors.userLimit = true\n          } else {\n            this.errors.edit = true\n          }\n          this.loading.edit = false\n        })\n    },\n\n    confirmCreateAndInvite(form) {\n      this.loading.createAndInvite = true\n      this.errors.edit = false\n      this.errors.userLimit = false\n      this.newPersonAndInvite(form)\n        .then(() => {\n          this.loading.createAndInvite = false\n          this.modals.edit = false\n        })\n        .catch(err => {\n          const isUserLimitReached =\n            err.body &&\n            err.body.message &&\n            err.body.message.indexOf('limit') > 0\n          if (isUserLimitReached) {\n            this.errors.userLimit = true\n          } else {\n            this.errors.edit = true\n          }\n          this.errors.edit = true\n          this.loading.createAndInvite = false\n        })\n      this.onSearchChange()\n    },\n\n    confirmInvite(form) {\n      form.id = this.personToEdit.id\n      this.loading.invite = true\n      this.errors.invite = false\n      this.invitePerson(form)\n        .then(() => {\n          this.loading.invite = false\n          this.success.invite = true\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.invite = false\n          this.success.invite = false\n          this.errors.invite = true\n        })\n      this.onSearchChange()\n    },\n\n    confirmDeletePeople() {\n      this.loading.del = true\n      this.errors.del = false\n      this.deletePeople(this.personToDelete)\n        .then(() => {\n          this.loading.del = false\n          this.modals.del = false\n        })\n        .catch(err => {\n          console.error(err)\n          this.loading.del = false\n          this.errors.del = true\n        })\n    },\n\n    onSearchChange() {\n      if (!this.searchField) return\n      const searchQuery = this.searchField.getValue()\n      if (searchQuery.length !== 1) {\n        this.setPeopleSearch(searchQuery)\n        this.updateRoute()\n      }\n    },\n\n    onAvatarClicked(person) {\n      this.personToEdit = person\n      this.errors.avatar = false\n      this.modals.avatar = true\n    },\n\n    onDeleteClicked(person) {\n      this.personToDelete = person\n      this.modals.del = true\n    },\n\n    onEditClicked(person) {\n      this.errors.invite = false\n      this.success.invite = false\n      this.personToEdit = person\n      this.modals.edit = true\n    },\n\n    onChangePasswordClicked(person) {\n      this.personToChangePassword = person\n      this.modals.changePassword = true\n    },\n\n    onNewClicked() {\n      this.errors.invite = false\n      this.success.invite = false\n      this.personToEdit = { role: 'user' }\n      this.modals.edit = true\n    },\n\n    showImportModal() {\n      this.modals.importModal = true\n    },\n\n    hideImportModal() {\n      this.modals.importModal = false\n    },\n\n    showImportRenderModal() {\n      this.modals.isImportRenderDisplayed = true\n    },\n\n    hideImportRenderModal() {\n      this.modals.isImportRenderDisplayed = false\n    },\n\n    saveSearchQuery(searchQuery) {\n      if (this.loading.savingSearch) {\n        return\n      }\n      this.loading.savingSearch = true\n      this.savePeopleSearch(searchQuery)\n        .catch(console.error)\n        .finally(() => {\n          this.loading.savingSearch = false\n        })\n    },\n\n    removeSearchQuery(searchQuery) {\n      this.removePeopleSearch(searchQuery).catch(console.error)\n    },\n\n    updateRoute() {\n      const search = this.searchField.getValue()\n      const department = this.selectedDepartment\n      const role = this.role\n      this.$router.push({ query: { search, department, role } })\n    }\n  },\n\n  metaInfo() {\n    return {\n      title: `${this.$t('people.title')} - Kitsu`\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.search {\n  margin-top: 2em;\n}\n.query-list {\n  margin-top: 1.5rem;\n}\n.search-options {\n  align-items: flex-end;\n}\n.filter-button {\n  margin-top: 0.3em;\n}\n</style>\n"],"names":["_sfc_main","modalMixin","TextField","mapGetters","mapActions","err","searchMixin","ButtonHrefLink","ButtonSimple","ChangePasswordModal","ComboboxStyled","ComboboxDepartment","EditAvatarModal","EditPersonModal","HardDeleteModal","ImportModal","ImportRenderModal","PageTitle","PeopleList","SearchField","SearchQueryList","people","person","personName","_a","persons","personKey","data","mode","csv","results","toUpdate","formData","filename","csvContent","file","form","action","message","searchQuery","search","department","role"],"mappings":"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"}